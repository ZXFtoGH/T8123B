/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef PLL_H
#define PLL_H
#include "platform.h"

/* for MT6983 DISP/MDP MTCMOS on/off APIs  */
#define MMSYS_PROTECT_EN_SET_0			(INFRACFG_AO_BASE + 0x0C14)
#define MMSYS_PROTECT_EN_CLR_0			(INFRACFG_AO_BASE + 0x0C18)
#define MMSYS_PROTECT_RDY_STA_0			(INFRACFG_AO_BASE + 0x0C1C)
#define MMSYS_PROTECT_RDY_STA_1			(INFRACFG_AO_BASE + 0x0C20)
#define MMSYS_PROTECT_EN_SET_1			(INFRACFG_AO_BASE + 0x0C24)
#define MMSYS_PROTECT_EN_CLR_1			(INFRACFG_AO_BASE + 0x0C28)
#define INFRASYS_PROTECT_EN_SET_0			(INFRACFG_AO_BASE + 0x0C44)
#define INFRASYS_PROTECT_EN_CLR_0			(INFRACFG_AO_BASE + 0x0C48)
#define INFRASYS_PROTECT_RDY_STA_0			(INFRACFG_AO_BASE + 0x0C4C)
#define INFRASYS_PROTECT_EN_SET_1			(INFRACFG_AO_BASE + 0x0C54)
#define INFRASYS_PROTECT_EN_CLR_1			(INFRACFG_AO_BASE + 0x0C58)
#define INFRASYS_PROTECT_RDY_STA_1			(INFRACFG_AO_BASE + 0x0C5C)
#define MD_MFGSYS_PROTECT_EN_SET_0			(INFRACFG_AO_BASE + 0x0CA4)
#define MD_MFGSYS_PROTECT_EN_CLR_0			(INFRACFG_AO_BASE + 0x0CA8)
#define MD_MFGSYS_PROTECT_RDY_STA_0			(INFRACFG_AO_BASE + 0x0CAC)

#define IMG_CG_CLR				(IMG_BASE + 0x08)
#define DIP_TOP_CG_CLR		(DIP_TOP_BASE + 0x08)
#define DIP_NR_CG_CLR			(DIP_NR_BASE + 0x08)
#define IPE_CG_CLR				(IPE_BASE + 0x08)

/* MCUCFG Register, for MT6983 TBD */
#define CPU_PLLDIV_CFG0          (MCUCFG_BASE + 0xA2A0) //ARMPLL_LL
#define CPU_PLLDIV_CFG1          (MCUCFG_BASE + 0xA2A4) //ARMPLL_BL1
#define CPU_PLLDIV_CFG2          (MCUCFG_BASE + 0xA2A8) //ARMPLL_BL2
#define CPU_PLLDIV_CFG3          (MCUCFG_BASE + 0xA2AC) //ARMPLL_BL3
#define CPU_PLLDIV_CFG4          (MCUCFG_BASE + 0xA2B0) //ARMPLL_BL0
#define BUS_PLLDIV_CFG           (MCUCFG_BASE + 0xA2E0) //CCIPLL

//#define MCUSYS_CFGREG_BASE  (0x0C000000)
//#define MCUSYS_PLLREG_BASE  (0x0C030000)
#define CCI_PLL1U_PLL_CON0       (MCUSYS_PLLREG_BASE + 0x008)
#define CCI_PLL1U_PLL_CON1       (MCUSYS_PLLREG_BASE + 0x00C)
#define CCI_PLL1U_FQMTR_CON0	(MCUSYS_PLLREG_BASE + 0x040)
#define CCI_PLL1U_FQMTR_CON1	(MCUSYS_PLLREG_BASE + 0x044)


#define CPU_L_PLL1U_PLL_CON0     (MCUSYS_PLLREG_BASE + 0x408)
#define CPU_L_PLL1U_PLL_CON1     (MCUSYS_PLLREG_BASE + 0x40C)
#define CPU_L_PLL1U_FQMTR_CON0	(MCUSYS_PLLREG_BASE + 0x440)
#define CPU_L_PLL1U_FQMTR_CON1	(MCUSYS_PLLREG_BASE + 0x444)

#define CPU_M_PLL1U_PLL_CON0     (MCUSYS_PLLREG_BASE + 0x808)
#define CPU_M_PLL1U_PLL_CON1     (MCUSYS_PLLREG_BASE + 0x80C)
#define CPU_M_PLL1U_FQMTR_CON0	(MCUSYS_PLLREG_BASE + 0x840)
#define CPU_M_PLL1U_FQMTR_CON1	(MCUSYS_PLLREG_BASE + 0x844)

#define CPU_B_PLL1U_PLL_CON0     (MCUSYS_PLLREG_BASE + 0xC08)
#define CPU_B_PLL1U_PLL_CON1     (MCUSYS_PLLREG_BASE + 0xC0C)
#define CPU_B_PLL1U_FQMTR_CON0	(MCUSYS_PLLREG_BASE + 0xC40)
#define CPU_B_PLL1U_FQMTR_CON1	(MCUSYS_PLLREG_BASE + 0xC44)

#define BUS_PLLDIV_CFG0     	(MCUSYS_CFGREG_BASE + 0x100)//CCI
#define CPU_PLLDIV_0_CFG0     (MCUSYS_CFGREG_BASE + 0x10C)//CPU_L
#define CPU_PLLDIV_1_CFG0     (MCUSYS_CFGREG_BASE + 0x118)//CPU_M
#define CPU_PLLDIV_2_CFG0     (MCUSYS_CFGREG_BASE + 0x124)//CPU_B

/* MFG */
#define MFGPLL_PLL1U_PLL1_CON0	(MFGPLL_BASE + 0x008)
#define MFGPLL_PLL1U_PLL1_CON1	(MFGPLL_BASE + 0x00C)
#define MFGPLL_PLL1U_PLL1_CON3	(MFGPLL_BASE + 0x014)
#define MFGPLL_PLL1U_FQMTR_CON0	(MFGPLL_BASE + 0x040)
#define MFGPLL_PLL1U_FQMTR_CON1	(MFGPLL_BASE + 0x044)

#define GPUEBPLL_PLL1U_PLL1_CON0	(GPUEBPLL_BASE + 0x008)
#define GPUEBPLL_PLL1U_PLL1_CON1	(GPUEBPLL_BASE + 0x00C)
#define GPUEBPLL_PLL1U_PLL1_CON3	(GPUEBPLL_BASE + 0x014)
#define GPUEBL_PLL1U_FQMTR_CON0		(GPUEBPLL_BASE + 0x040)

#define MFGSCPLL_PLL1U_PLL1_CON0	(MFGSCPLL_BASE + 0x008)
#define MFGSCPLL_PLL1U_PLL1_CON1	(MFGSCPLL_BASE + 0x00C)
#define MFGSCPLL_PLL1U_PLL1_CON3	(MFGSCPLL_BASE + 0x014)
#define MFGSCPLL_PLL1U_FQMTR_CON0	(MFGSCPLL_BASE + 0x040)
#define MFGSCPLL_PLL1U_FQMTR_CON1	(MFGSCPLL_BASE + 0x044)

/* APMIXEDSYS Register */
#define AP_PLL_CON0             (APMIXED_BASE + 0x000)
#define AP_PLL_CON5		(APMIXED_BASE + 0x014)
#define PLLON_CON0		(APMIXED_BASE + 0x050)
#define PLLON_CON1		(APMIXED_BASE + 0x054)
#define PLLON_CON2		(APMIXED_BASE + 0x058)
#define PLLON_CON3		(APMIXED_BASE + 0x05C) //no defined, legacy used by dram, TBD

#define AP_PLLGP1_CON0		(APMIXED_BASE + 0x200)
#define AP_PLLGP1_CON1		(APMIXED_BASE + 0x204)
#define AP_PLLGP2_CON0		(APMIXED_BASE + 0x300)
#define AP_PLLGP2_CON1		(APMIXED_BASE + 0x304)

#define ARMPLL_LL_CON0          (APMIXED_BASE + 0x208)
#define ARMPLL_LL_CON1          (APMIXED_BASE + 0x20C)
#define ARMPLL_LL_CON2          (APMIXED_BASE + 0x210)
#define ARMPLL_LL_CON3          (APMIXED_BASE + 0x214)

#define ARMPLL_BL_CON0		(APMIXED_BASE + 0x218)
#define ARMPLL_BL_CON1		(APMIXED_BASE + 0x21C)
#define ARMPLL_BL_CON2		(APMIXED_BASE + 0x220)
#define ARMPLL_BL_CON3		(APMIXED_BASE + 0x224)

#define ARMPLL_B_CON0		(APMIXED_BASE + 0x228)
#define ARMPLL_B_CON1		(APMIXED_BASE + 0x22C)
#define ARMPLL_B_CON2		(APMIXED_BASE + 0x230)
#define ARMPLL_B_CON3		(APMIXED_BASE + 0x234)

#define CCIPLL_CON0		(APMIXED_BASE + 0x238)
#define CCIPLL_CON1		(APMIXED_BASE + 0x23C)
#define CCIPLL_CON2		(APMIXED_BASE + 0x240)
#define CCIPLL_CON3		(APMIXED_BASE + 0x244)

#define TVDPLL_CON0		(APMIXED_BASE + 0x248)
#define TVDPLL_CON1		(APMIXED_BASE + 0x24C)
#define TVDPLL_CON2		(APMIXED_BASE + 0x250)
#define TVDPLL_CON3		(APMIXED_BASE + 0x254)

#define UNIVPLL_CON0		(APMIXED_BASE + 0x308)
#define UNIVPLL_CON1		(APMIXED_BASE + 0x30C)
#define UNIVPLL_CON2		(APMIXED_BASE + 0x310)
#define UNIVPLL_CON3		(APMIXED_BASE + 0x314)

#define USBPLL_CON0		(APMIXED_BASE + 0x318)
#define USBPLL_CON1		(APMIXED_BASE + 0x31C)
#define USBPLL_CON2		(APMIXED_BASE + 0x320)
#define USBPLL_CON3		(APMIXED_BASE + 0x324)

#define APLL1_CON0		(APMIXED_BASE + 0x328)
#define APLL1_CON1		(APMIXED_BASE + 0x32C)
#define APLL1_CON2		(APMIXED_BASE + 0x330)

#define APLL2_CON0		(APMIXED_BASE + 0x33C)
#define APLL2_CON1		(APMIXED_BASE + 0x340)
#define APLL2_CON2		(APMIXED_BASE + 0x344)
#define APLL2_CON3		(APMIXED_BASE + 0x338)
#define APLL2_CON4		(APMIXED_BASE + 0x34C)

#define MAINPLL_CON0    (APMIXED_BASE + 0x350)
#define MAINPLL_CON1    (APMIXED_BASE + 0x354)
#define MAINPLL_CON3		(APMIXED_BASE + 0x35C)

#define MSDCPLL_CON0		(APMIXED_BASE + 0x360)
#define MSDCPLL_CON1		(APMIXED_BASE + 0x364)
#define MSDCPLL_CON3		(APMIXED_BASE + 0x36C)

#define IMGPLL_CON0		(APMIXED_BASE + 0x370)
#define IMGPLL_CON1		(APMIXED_BASE + 0x374)
#define IMGPLL_CON3		(APMIXED_BASE + 0x37C)

#define ADSPPLL_CON0		(APMIXED_BASE + 0x380)
#define ADSPPLL_CON1		(APMIXED_BASE + 0x384)
#define ADSPPLL_CON3		(APMIXED_BASE + 0x38C)

#define MMPLL_CON0		(APMIXED_BASE + 0x3A0)
#define MMPLL_CON1		(APMIXED_BASE + 0x3A4)
#define MMPLL_CON3		(APMIXED_BASE + 0x3AC)

#define MPLL_CON0		(APMIXED_BASE + 0x390)
#define MPLL_CON1		(APMIXED_BASE + 0x394)
#define MPLL_CON3		(APMIXED_BASE + 0x39C)

#define EMIPLL_CON0		(APMIXED_BASE + 0x3B0)
#define EMIPLL_CON1		(APMIXED_BASE + 0x3B4)
/* VLPTOPCKGEN Register */
#define VLP_CLK_CFG_UPDATE      (VLPTOPCKGEN_BASE + 0x004)
#define VLP_CLK_CFG_0_SET				(VLPTOPCKGEN_BASE + 0x00C)
#define VLP_CLK_CFG_0_CLR				(VLPTOPCKGEN_BASE + 0x010)
#define VLP_CLK_CFG_1_SET				(VLPTOPCKGEN_BASE + 0x018)
#define VLP_CLK_CFG_1_CLR				(VLPTOPCKGEN_BASE + 0x01C)
#define VLP_CLK_CFG_2_CON				(VLPTOPCKGEN_BASE + 0x020)
#define VLP_CLK_CFG_2_SET				(VLPTOPCKGEN_BASE + 0x024)
#define VLP_CLK_CFG_2_CLR				(VLPTOPCKGEN_BASE + 0x028)
#define VLP_CLK_CFG_3_SET				(VLPTOPCKGEN_BASE + 0x030)
#define VLP_CLK_CFG_3_CLR				(VLPTOPCKGEN_BASE + 0x034)

#define SPM2GPUPM_CON				(SPM_BASE + 0x410)

/* TOPCKGEN Register */
#define CLK_CFG_UPDATE          (TOPCKGEN_BASE + 0x004)
#define CLK_CFG_UPDATE1         (TOPCKGEN_BASE + 0x008)
#define CLK_CFG_UPDATE2         (TOPCKGEN_BASE + 0x00C)

#define CLK_CFG_0_SET           (TOPCKGEN_BASE + 0x014)
#define CLK_CFG_0_CLR           (TOPCKGEN_BASE + 0x018)
#define CLK_CFG_1_SET           (TOPCKGEN_BASE + 0x024)
#define CLK_CFG_1_CLR           (TOPCKGEN_BASE + 0x028)
#define CLK_CFG_2_SET           (TOPCKGEN_BASE + 0x034)
#define CLK_CFG_2_CLR           (TOPCKGEN_BASE + 0x038)
#define CLK_CFG_3_SET           (TOPCKGEN_BASE + 0x044)
#define CLK_CFG_3_CLR           (TOPCKGEN_BASE + 0x048)
#define CLK_CFG_4_SET           (TOPCKGEN_BASE + 0x054)
#define CLK_CFG_4_CLR           (TOPCKGEN_BASE + 0x058)
#define CLK_CFG_5_SET           (TOPCKGEN_BASE + 0x064)
#define CLK_CFG_5_CLR           (TOPCKGEN_BASE + 0x068)
#define CLK_CFG_6_SET           (TOPCKGEN_BASE + 0x074)
#define CLK_CFG_6_CLR           (TOPCKGEN_BASE + 0x078)
#define CLK_CFG_7_SET           (TOPCKGEN_BASE + 0x084)
#define CLK_CFG_7_CLR           (TOPCKGEN_BASE + 0x088)
#define CLK_CFG_8_SET           (TOPCKGEN_BASE + 0x094)
#define CLK_CFG_8_CLR           (TOPCKGEN_BASE + 0x098)
#define CLK_CFG_9_SET           (TOPCKGEN_BASE + 0x0A4)
#define CLK_CFG_9_CLR           (TOPCKGEN_BASE + 0x0A8)
#define CLK_CFG_10_SET          (TOPCKGEN_BASE + 0x0B4)
#define CLK_CFG_10_CLR          (TOPCKGEN_BASE + 0x0B8)
#define CLK_CFG_11_SET          (TOPCKGEN_BASE + 0x0C4)
#define CLK_CFG_11_CLR          (TOPCKGEN_BASE + 0x0C8)
#define CLK_CFG_12_SET          (TOPCKGEN_BASE + 0x0D4)
#define CLK_CFG_12_CLR          (TOPCKGEN_BASE + 0x0D8)
#define CLK_CFG_13_SET          (TOPCKGEN_BASE + 0x0E4)
#define CLK_CFG_13_CLR          (TOPCKGEN_BASE + 0x0E8)
#define CLK_CFG_14_SET          (TOPCKGEN_BASE + 0x0F4)
#define CLK_CFG_14_CLR          (TOPCKGEN_BASE + 0x0F8)
#define CLK_CFG_15_SET          (TOPCKGEN_BASE + 0x104)
#define CLK_CFG_15_CLR          (TOPCKGEN_BASE + 0x108)
#define CLK_CFG_16_SET          (TOPCKGEN_BASE + 0x114)
#define CLK_CFG_16_CLR          (TOPCKGEN_BASE + 0x118)
#define CLK_CFG_17_SET          (TOPCKGEN_BASE + 0x124)
#define CLK_CFG_17_CLR          (TOPCKGEN_BASE + 0x128)
#define CLK_CFG_18_SET          (TOPCKGEN_BASE + 0x134)
#define CLK_CFG_18_CLR          (TOPCKGEN_BASE + 0x138)
#define CLK_CFG_19_SET          (TOPCKGEN_BASE + 0x144)
#define CLK_CFG_19_CLR          (TOPCKGEN_BASE + 0x148)
#define CLK_CFG_20_SET          (TOPCKGEN_BASE + 0x154)
#define CLK_CFG_20_CLR          (TOPCKGEN_BASE + 0x158)
#define CLK_CFG_21_SET          (TOPCKGEN_BASE + 0x164)
#define CLK_CFG_21_CLR          (TOPCKGEN_BASE + 0x168)
#define CLK_CFG_22_SET          (TOPCKGEN_BASE + 0x174)
#define CLK_CFG_22_CLR          (TOPCKGEN_BASE + 0x178)
#define CLK_CFG_30_SET          (TOPCKGEN_BASE + 0x1F4)
#define CLK_CFG_30_CLR          (TOPCKGEN_BASE + 0x1F8)

#define CLK_MISC_CFG_0		(TOPCKGEN_BASE + 0x240)
#define CLK_MISC_CFG_1		(TOPCKGEN_BASE + 0x250)
#define CLK_DBG_CFG				(TOPCKGEN_BASE + 0x28C)
#define CLK_SCP_CFG_0			(TOPCKGEN_BASE + 0x200)
#define CLK_SCP_CFG_1			(TOPCKGEN_BASE + 0x210)
#define CLK26CALI_0				(TOPCKGEN_BASE + 0x220)
#define CLK26CALI_1				(TOPCKGEN_BASE + 0x224)

/* INFRASYS Register */
#define INFRA_BUS_DCM_CTRL	(INFRACFG_AO_BASE + 0x70)

#define INFRA_PDN_SET0          (INFRACFG_AO_BASE + 0x0080)
#define INFRA_PDN_CLR0          (INFRACFG_AO_BASE + 0x0084)
#define INFRA_PDN_SET1          (INFRACFG_AO_BASE + 0x0088)
#define INFRA_PDN_CLR1          (INFRACFG_AO_BASE + 0x008C)
#define INFRA_PDN_SET2          (INFRACFG_AO_BASE + 0x00A4)
#define INFRA_PDN_CLR2          (INFRACFG_AO_BASE + 0x00A8)
#define INFRA_PDN_SET3          (INFRACFG_AO_BASE + 0x00C0)
#define INFRA_PDN_CLR3          (INFRACFG_AO_BASE + 0x00C4)
#define INFRA_PDN_SET4          (INFRACFG_AO_BASE + 0x00E0)
#define INFRA_PDN_CLR4          (INFRACFG_AO_BASE + 0x00E4)


/* legacy driver support */
#define MODULE_SW_CG_0		(INFRACFG_AO_BASE + 0x0090)
#define MODULE_SW_CG_1		(INFRACFG_AO_BASE + 0x0094)
#define MODULE_SW_CG_2		(INFRACFG_AO_BASE + 0x00AC)
#define MODULE_SW_CG_3		(INFRACFG_AO_BASE + 0x00C8)
#define MODULE_SW_CG_4		(INFRACFG_AO_BASE + 0x00E8)
#define MODULE_SW_CG_0_SET	INFRA_PDN_SET0
#define MODULE_SW_CG_0_CLR	INFRA_PDN_CLR0
#define MODULE_SW_CG_1_SET	INFRA_PDN_SET1
#define MODULE_SW_CG_1_CLR	INFRA_PDN_CLR1
#define MODULE_SW_CG_2_SET	INFRA_PDN_SET2
#define MODULE_SW_CG_2_CLR	INFRA_PDN_CLR2
#define MODULE_SW_CG_3_SET	INFRA_PDN_SET3
#define MODULE_SW_CG_3_CLR	INFRA_PDN_CLR3
#define MODULE_SW_CG_4_SET	INFRA_PDN_SET4
#define MODULE_SW_CG_4_CLR	INFRA_PDN_CLR4

/* PERISYS Register */
#define PERI_CG_0		(PERICFG_AO_BASE + 0x0010)
#define PERI_CG_1		(PERICFG_AO_BASE + 0x0014)
#define PERI_CG_2		(PERICFG_AO_BASE + 0x0018)
#define PERI_PDN_CLR0		(PERICFG_AO_BASE + 0x0028)
#define PERI_PDN_SET0		(PERICFG_AO_BASE + 0x0024)
#define PERI_PDN_CLR1		(PERICFG_AO_BASE + 0x0030)
#define PERI_PDN_SET1		(PERICFG_AO_BASE + 0x002C)
#define PERI_PDN_CLR2		(PERICFG_AO_BASE + 0x0038)
#define PERI_PDN_SET2		(PERICFG_AO_BASE + 0x0034)
#define PERI_CG_0_BK		(PERICFG_AO_BASE + 0x003C)
#define PERI_CG_1_BK		(PERICFG_AO_BASE + 0x0040)
#define PERI_CG_2_BK		(PERICFG_AO_BASE + 0x0044)

/* MMINFRA Register */
#define MMINFRA_CG_SET0		(MMINFRA_CONFIG_BASE + 0x0104)
#define MMINFRA_CG_CLR0		(MMINFRA_CONFIG_BASE + 0x0108)
#define MMINFRA_CG_SET1		(MMINFRA_CONFIG_BASE + 0x0114)
#define MMINFRA_CG_CLR1		(MMINFRA_CONFIG_BASE + 0x0118)

/* MMSYS Register*/

#define DISP_CG_CON0            (MMSYS_CONFIG_BASE + 0x100)
#define DISP_CG_SET0            (MMSYS_CONFIG_BASE + 0x104)
#define DISP_CG_CLR0            (MMSYS_CONFIG_BASE + 0x108)
#define DISP_CG_CON1            (MMSYS_CONFIG_BASE + 0x110)
#define DISP_CG_SET1            (MMSYS_CONFIG_BASE + 0x114)
#define DISP_CG_CLR1            (MMSYS_CONFIG_BASE + 0x118)
#define DISP_CG_CON2            (MMSYS_CONFIG_BASE + 0x1a0)
#define DISP_CG_SET2            (MMSYS_CONFIG_BASE + 0x1a4)
#define DISP_CG_CLR2            (MMSYS_CONFIG_BASE + 0x1a8)

#define DISP1_CG_CON0            (MMSYS1_CONFIG_BASE + 0x100)
#define DISP1_CG_SET0            (MMSYS1_CONFIG_BASE + 0x104)
#define DISP1_CG_CLR0            (MMSYS1_CONFIG_BASE + 0x108)
#define DISP1_CG_CON1            (MMSYS1_CONFIG_BASE + 0x110)
#define DISP1_CG_SET1            (MMSYS1_CONFIG_BASE + 0x114)
#define DISP1_CG_CLR1            (MMSYS1_CONFIG_BASE + 0x118)
#define DISP1_CG_CON2            (MMSYS1_CONFIG_BASE + 0x1a0)
#define DISP1_CG_SET2            (MMSYS1_CONFIG_BASE + 0x1a4)
#define DISP1_CG_CLR2            (MMSYS1_CONFIG_BASE + 0x1a8)

/* MDPSYS Register TBD */
#define MDP_CG_CON0		(MDPSYS_CONFIG_BASE + 0x100)
#define MDP_CG_SET0		(MDPSYS_CONFIG_BASE + 0x104)
#define MDP_CG_CLR0		(MDPSYS_CONFIG_BASE + 0x108)
#define MDP_CG_CON1		(MDPSYS_CONFIG_BASE + 0x110)
#define MDP_CG_SET1		(MDPSYS_CONFIG_BASE + 0x114)
#define MDP_CG_CLR1		(MDPSYS_CONFIG_BASE + 0x118)
#define MDP_CG_CON2		(MDPSYS_CONFIG_BASE + 0x120)
#define MDP_CG_SET2		(MDPSYS_CONFIG_BASE + 0x124)
#define MDP_CG_CLR2		(MDPSYS_CONFIG_BASE + 0x128)

/* MCUSYS Register TBD */
#define CKDIV1_LL_CFG		(MCUCFG_BASE + 0xA2A0)
#define CKDIV1_L_CFG		(MCUCFG_BASE + 0xA2A4)
#define CKDIV1_L_CFG_2		(MCUCFG_BASE + 0xA2A8)
#define CKDIV1_L_CFG_3		(MCUCFG_BASE + 0xA2AC)
#define CKDIV1_L_CFG_4		(MCUCFG_BASE + 0xA2B0)

/*  CPU Freq Boost*/
enum cpu_opp {
	CPU_OPP0 = 0,
	CPU_OPP1,
	CPU_OPP2,
	CPU_OPP3,
	CPU_OPP4,
	CPU_OPP5,
	CPU_OPP_NUM,
};

/*
 * CLKMGR EXTERN FUNCTIONS
 */
extern unsigned int mt_get_abist_freq(unsigned int ID);
extern void mt_get_cpu_freq(void);
//extern void set_armpll_ll_rate(enum cpu_opp opp);
extern void set_armpll_ll_rate(u32 khz);
extern void set_ccipll_rate(u32 khz);
extern int mt_get_cpub_freq(void);
extern int mt_get_cpum_freq(void);
extern int mt_get_cpul_freq(void);
extern int mt_get_ccipll_freq(void);
#endif
