#pragma once


//
//  Values are 32 bit values laid out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +---+-+-+-----------------------+-------------------------------+
//  |Sev|C|R|     Facility          |               Code            |
//  +---+-+-+-----------------------+-------------------------------+
//
//  where
//
//      Sev - is the severity code
//
//          00 - Success
//          01 - Informational
//          10 - Warning
//          11 - Error
//
//      C - is the Customer code flag. not used now. set 0
//
//      R - is a reserved bit. not used now. set 0
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//
//
// Define the facility codes
//
#define FACILITY_COMMON				1
#define FACILITY_AUTHENTICATION		2
#define FACILITY_LIBRARY			3
#define FACILITY_DEV_HW				4
#define FACILITY_FUNCTION			5
#define FACILITY_BROM				6
#define FACILITY_DA					7
#define FACILITY_PRELOADER			8



#define SUCCESSED(code) (((status_t)(code)) >= 0)  //SUCCEEDED used by win32. 
#define FAIL(code) 		(((status_t)(code)) < 0)

#define SEV_SUCCESS 	(0 << 30)
#define SEV_INFO 		(1 << 30)
#define SEV_WARNING 	(2 << 30)
#define SEV_ERROR 		(3 << 30)

#define MAKE_CODE(sev,faci,code) ((sev) | (faci << 16) | (code))

#define STATUS_OK                                       0
#define STATUS_ERR                                      MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x1)              //0xc0010001
#define STATUS_ABORT                                    MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x2)              //0xc0010002
#define STATUS_UNSUPPORT_CMD                            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x3)              //0xc0010003
#define STATUS_UNSUPPORT_CTRL_CODE                      MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x4)              //0xc0010004        //H&D
#define STATUS_PROTOCOL_ERR                             MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x5)              //0xc0010005        //H&D
#define STATUS_PROTOCOL_BUFFER_OVERFLOW                 MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x6)              //0xc0010006
#define STATUS_INSUFFICIENT_BUFFER                      MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x7)              //0xc0010007
#define STATUS_USB_SCAN_ERR                             MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x8)              //0xc0010008
#define STATUS_INVALID_HSESSION                         MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x9)              //0xc0010009
#define STATUS_INVALID_SESSION                          MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xA)              //0xc001000a
#define STATUS_INVALID_STAGE                            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xB)              //0xc001000b
#define STATUS_NOT_IMPLEMENTED                          MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xC)              //0xc001000c
#define STATUS_FILE_NOT_FOUND                           MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xD)              //0xc001000d
#define STATUS_OPEN_FILE_ERR                            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xE)              //0xc001000e
#define STATUS_WRITE_FILE_ERR                           MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0xF)              //0xc001000f
#define STATUS_READ_FILE_ERR                            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x10)             //0xc0010010
#define STATUS_CREATE_FILE_ERR            	            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x11)             //0xc0010011
#define STATUS_UNSUPPORT_VERSION   			            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x12)             //0xc0010012
#define STATUS_MEM_ALLOC_FAIL   			            MAKE_CODE(SEV_ERROR, FACILITY_COMMON, 0x13)             //0xc0010013

//Host command 
#define STATUS_DEVICE_CTRL_EXCEPTION                    MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x1)            //0xc0050001
#define STATUS_SHUTDOWN_CMD_EXCEPTION                   MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x2)            //0xc0050002
#define STATUS_DOWNLOAD_EXCEPTION                       MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x3)            //0xc0050003
#define STATUS_UPLOAD_EXCEPTION                         MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x4)            //0xc0050004
#define STATUS_EXT_RAM_EXCEPTION                        MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x5)            //0xc0050005
#define STATUS_NOTIFY_SWITCH_USB_SPEED_EXCEPTION        MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x6)            //0xc0050006
#define STATUS_READ_DATA_EXCEPTION                      MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x7)            //0xc0050007
#define STATUS_WRITE_DATA_EXCEPTION                     MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x8)            //0xc0050008
#define STATUS_FORMAT_EXCEPTION                         MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0x9)            //0xc0050009
#define STATUS_OTP_OPERATION_EXCEPTION                  MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0xA)            //0xc005000a
#define STATUS_SWITCH_USB_EXCEPTION                     MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0xB)            //0xc005000b
#define STATUS_WRITE_EFUSE_EXCEPTION                    MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0xC)            //0xc005000c
#define STATUS_READ_EFUSE_EXCEPTION                     MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0xD)            //0xc005000d
#define STATUS_FIRMWARE_UPDATE_EXCEPTION                MAKE_CODE(SEV_ERROR, FACILITY_FUNCTION, 0xE)            //0xc005000e

#define STATUS_END_OF_TRANSMISSION                      MAKE_CODE(SEV_INFO, FACILITY_FUNCTION, 0x1)             //0x40050001

//brom
#define STATUS_BROM_CMD_STARTCMD_FAIL                   MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x1)                //0xc0060001
#define STATUS_BROM_GET_BBCHIP_HW_VER_FAIL              MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x2)                //0xc0060002
#define STATUS_BROM_CMD_SEND_DA_FAIL                    MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x3)                //0xc0060003
#define STATUS_BROM_CMD_JUMP_DA_FAIL                    MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x4)                //0xc0060004
#define STATUS_BROM_CMD_FAIL                            MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x5)                //0xc0060005
#define STATUS_CALLBACK_BROM_STAGE_FAIL                 MAKE_CODE(SEV_ERROR, FACILITY_BROM, 0x6)                //0xc0060006

//brom info
#define STATUS_BROM_CONNECT_NOT_PL			            MAKE_CODE(SEV_INFO, FACILITY_BROM, 0x1)                 //0x40060001

//preloader 
#define STATUS_PL_CMD_FAIL                              MAKE_CODE(SEV_ERROR, FACILITY_PRELOADER, 0x1)           //0xc0080001

//da
#define STATUS_DA_VERSION_INCORRECT                     MAKE_CODE(SEV_ERROR, FACILITY_DA, 0x1)                  //0xc0070001
#define STATUS_DA_NOT_FOUND                             MAKE_CODE(SEV_ERROR, FACILITY_DA, 0x2)                  //0xc0070002
#define STATUS_DA_SECTION_NOT_FOUND                     MAKE_CODE(SEV_ERROR, FACILITY_DA, 0x3)                  //0xc0070003
#define STATUS_DA_HASH_MISMATCH                         MAKE_CODE(SEV_ERROR, FACILITY_DA, 0x4)                  //0xc0070004        //D.
#define STATUS_DA_EXCEED_MAX_NUM                        MAKE_CODE(SEV_ERROR, FACILITY_DA, 0x5)                  //0xc0070005

//Lib
#define STATUS_SCATTER_FILE_INVALID                     MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1)             //0xc0030001
#define STATUS_DA_FILE_INVALID                          MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x2)             //0xc0030002
#define STATUS_DA_SELECTION_ERR                         MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x3)             //0xc0030003
#define STATUS_PRELOADER_INVALID                        MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x4)             //0xc0030004
#define STATUS_EMI_HDR_INVALID                          MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x5)             //0xc0030005
#define STATUS_STORAGE_MISMATCH                         MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x6)             //0xc0030006        //H&D.
#define STATUS_INVALID_PARAMETERS                       MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x7)             //0xc0030007
#define STATUS_INVALID_GPT                              MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x8)             //0xc0030008        //H&D.
#define STATUS_INVALID_PMT                              MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x9)             //0xc0030009        //H&D.
#define STATUS_LAYOUT_CHANGED                           MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xA)             //0xc003000a
#define STATUS_INVALID_FORMAT_PARAMETER                 MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xB)             //0xc003000b
#define STATUS_UNKNOWN_STORAGE_SECTION_TYPE             MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xC)             //0xc003000c
#define STATUS_UNKNOWN_SCATTER_FIELD 		            MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xD)             //0xc003000d
#define STATUS_PARTITION_TBL_NOT_EXIST                  MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xE)             //0xc003000e
#define STATUS_SCATTER_HW_CHIP_ID_MISMATCH              MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0xF)             //0xc003000f
#define STATUS_SEC_CERT_FILE_NOT_FOUND                  MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x10)            //0xc0030010
#define STATUS_SEC_AUTH_FILE_NOT_FOUND                  MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x11)            //0xc0030011
#define STATUS_SEC_AUTH_FILE_NEEDED                     MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x12)            //0xc0030012
#define STATUS_EMI_CONTAINER_FILE_NOT_FOUND             MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x13)            //0xc0030013
#define STATUS_SCATTER_FILE_NOT_FOUND                   MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x14)            //0xc0030014
#define STATUS_XML_FILE_OP_ERR                          MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY,0x15)             //0xc0030015
#define STATUS_UNSUPPORTED_PAGE_SIZE                    MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x16)            //0xc0030016
#define STATUS_EMI_INFO_LEN_OFFSET_INVALID	            MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x17)            //0xc0030017
#define STATUS_EMI_INFO_LEN_INVALID			            MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x18)            //0xc0030018
#define STATUS_UNSUPPORT_STORAGE                        MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x19)            //0xc0030019
#define STATUS_RSC_MAGIC_ERR				            MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1A)            //0xc003001a
#define STATUS_CERT_INVALID                             MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1B)            //0xc003001b
#define STATUS_STOR_LIFE_WARN                           MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1C)            //0xc003001c
#define STATUS_STOR_LIFE_EXHAUST	                    MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1D)            //0xc003001d
#define STATUS_INVALID_FWBIN	                        MAKE_CODE(SEV_ERROR, FACILITY_LIBRARY, 0x1E)            //0xc003001e

//device info
#define STATUS_SPARSE_INCOMPLETE                        MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x1)               //0x40040001
#define STATUS_OTP_LOCKED                               MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x2)               //0x40040002
#define STATUS_OTP_UNLOCKED                             MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x3)               //0x40040003
#define STATUS_CONTINUE                                 MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x4)               //0x40040004
#define STATUS_COMPLETE                                 MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x5)               //0x40040005
#define STATUS_DRAM_REPAIR_COMPLETE                     MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x6)               //0x40040006

//device err
#define STATUS_UNSUPPORT_OP                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x1)              //0xc0040001
#define STATUS_THREAD                                   MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x2)              //0xc0040002
#define STATUS_CHECKSUM_ERR                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x3)              //0xc0040003
#define STATUS_TOO_LARGE                                MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x4)              //0xc0040004
#define STATUS_UNKNOWN_SPARSE_CHUNK_TYPE                MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x5)              //0xc0040005
#define STATUS_PARTITON_NOT_FOUND                       MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x6)              //0xc0040006
#define STATUS_READ_PT_FAIL                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x7)              //0xc0040007
#define STATUS_EXCEED_MAX_PART_NUM                      MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x8)              //0xc0040008
#define STATUS_UNKNOWN_STORAGE_TYPE                     MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x9)              //0xc0040009
#define STATUS_DRAM_TEST_FAILED                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0xA)              //0xc004000a
#define STATUS_EXCEED_AVALIABLE_RANGE                   MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0xB)              //0xc004000b
#define STATUS_WRITE_SPARSE_IMAGE_FAIL                  MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0xC)              //0xc004000c
#define STATUS_REG_PERMISSION_DENIED                    MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0xD)              //0xc004000d
#define STATUS_PL_NOT_FOUND                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0xE)              //0xc004000e

//emmc err
#define STATUS_MMC_ERR                                  MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x30)             //0xc0040030

//nand err
#define STATUS_NAND_ERR                                 MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x40)             //0xc0040040
#define STATUS_NAND_IN_PROGRESS                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x41)             //0xc0040041
#define STATUS_NAND_TIMEOUT                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x42)             //0xc0040042
#define STATUS_NAND_BAD_BLOCK                           MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x43)             //0xc0040043
#define STATUS_NAND_ERASE_FAILED                        MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x44)             //0xc0040044
#define STATUS_NAND_PAGE_PROGRAM_FAILED                 MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x45)             //0xc0040045
#define STATUS_NAND_FTL_OFFSET_JUMP_NEXT                MAKE_CODE(SEV_INFO, FACILITY_DEV_HW, 0x46)              //0x40040046

//DRAM init error
#define STATUS_EMI_SETTING_VERSION_ERROR                MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x50)             //0xc0040050

//ufs err
#define STATUS_UFS_ERR                                  MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x60)             //0xc0040060

//otp
#define STATUS_DA_OTP_NOT_SUPPORT                       MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x100)            //0xc0040100
#define STATUS_DA_OTP_LOCK_FAIL                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x102)            //0xc0040102

//emmc otp
#define STATUS_DA_EMMC_OTP_NOT_SUPPORT                  STATUS_DA_OTP_NOT_SUPPORT
#define STATUS_DA_EMMC_OTP_LOCKED 			            STATUS_OTP_LOCKED
#define STATUS_DA_EMMC_OTP_LOCK_FAIL 		            STATUS_DA_OTP_LOCK_FAIL
#define STATUS_DA_EMMC_OTP_UNLOCKED   		            STATUS_OTP_UNLOCKED

//Note: need modify nand driver with error code "S_..."
#define STATUS_DA_NAND_OTP_NOT_SUPPORT 	                STATUS_DA_OTP_NOT_SUPPORT
#define STATUS_DA_NAND_OTP_LOCKED 			            STATUS_OTP_LOCKED
#define STATUS_DA_NAND_OTP_LOCK_FAIL 		            STATUS_DA_OTP_LOCK_FAIL
#define STATUS_DA_NAND_OTP_UNLOCKED 		            STATUS_OTP_UNLOCKED


/* efuse */
#define STATUS_EFUSE_UNKNOWN_ERR                        MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x200)            //0xc0040200
#define STATUS_EFUSE_WRITE_TIMEOUT_WITHOUT_VERIFY       MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x201)            //0xc0040201
#define STATUS_EFUSE_BLOWN_DONE                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x202)            //0xc0040202
#define STATUS_EFUSE_REVERT_BIT                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x203)            //0xc0040203
#define STATUS_EFUSE_BLOWN_PARTLY                       MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x204)            //0xc0040204      //need to reblow
#define STATUS_EFUSE_INVALID_ARGUMENT                   MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x205)            //0xc0040205
#define STATUS_EFUSE_VALUE_IS_NOT_ZERO                  MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x206)            //0xc0040206
#define STATUS_EFUSE_BLOWN_INCORRECT_DATA               MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x207)            //0xc0040207
#define STATUS_EFUSE_BROKEN                             MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x208)            //0xc0040208
#define STATUS_EFUSE_BLOW_ERR                           MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x209)            //0xc0040209
#define STATUS_EFUSE_DATA_PROCESS_ERR                   MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20A)            //0xc004020a
#define STATUS_EFUSE_UNLOCK_BPKEY_ERR                   MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20B)            //0xc004020b
#define STATUS_EFUSE_CREATE_LIST_ERR                    MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20C)            //0xc004020c
#define STATUS_EFUSE_WRITE_REGISTER_ERR                 MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20D)            //0xc004020d
#define STATUS_EFUSE_PADDING_TYPE_MISMATCH              MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20E)            //0xc004020e
#define STATUS_EFUSE_RSA_ERROR                          MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x210)            //0xc0040210
#define STATUS_EFUSE_CON_LOCKED                         MAKE_CODE(SEV_ERROR, FACILITY_DEV_HW, 0x20F)            //0xc004020f

/* security */
#define STATUS_SEC_ROM_INFO_NOT_FOUND                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1)      //0xc0020001
#define STATUS_SEC_CUST_NAME_NOT_FOUND                  MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2)      //0xc0020002
#define STATUS_SEC_ROM_INFO_DEVICE_NOT_SUPPORTED        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x3)      //0xc0020003

#define STATUS_SEC_DL_FORBIDDEN                         MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4)      //0xc0020004
#define STATUS_SEC_IMG_TOO_LARGE                        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5)      //0xc0020005
#define STATUS_SEC_PL_VFY_FAIL                          MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x6)      //0xc0020006
#define STATUS_SEC_IMG_VFY_FAIL                         MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x7)      //0xc0020007
#define STATUS_SEC_HASH_OP_FAIL                         MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x8)      //0xc0020008
#define STATUS_SEC_HASH_BINDING_CHK_FAIL                MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x9)      //0xc0020009
#define STATUS_SEC_INVALID_BUF                          MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xA)      //0xc002000a
#define STATUS_SEC_BINDING_HASH_NOT_AVAIL               MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xB)      //0xc002000b
#define STATUS_SEC_WRITE_DATA_NOT_ALLOWED               MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xC)      //0xc002000c
#define STATUS_SEC_FORMAT_NOT_ALLOWED                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xD)      //0xc002000d
#define STATUS_SEC_SV5_PUBK_AUTH_FAIL                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xE)      //0xc002000e
#define STATUS_SEC_SV5_HASH_VFY_FAIL                    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xF)      //0xc002000f
#define STATUS_SEC_SV5_RSA_OP_FAIL                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x10)     //0xc0020010
#define STATUS_SEC_SV5_RSA_VFY_FAIL                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x11)     //0xc0020011
#define STATUS_SEC_SV5_GFH_NOT_FOUND                    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x12)     //0xc0020012
#define STATUS_SEC_NOT_VALID_CERT1                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x13)     //0xc0020013
#define STATUS_SEC_NOT_VALID_CERT2                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x14)     //0xc0020014
#define STATUS_SEC_NOT_VALID_IMGHDR                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x15)     //0xc0020015
#define STATUS_SEC_SIG_SZ_NOT_VALID                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x16)     //0xc0020016
#define STATUS_SEC_PSS_OP_FAIL                          MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x17)     //0xc0020017
#define STATUS_SEC_CERT_AUTH_FAIL                       MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x18)     //0xc0020018
#define STATUS_SEC_PUBK_AUTH_MISMATCH_N_SIZE  	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x19)     //0xc0020019
#define STATUS_SEC_PUBK_AUTH_MISMATCH_E_SIZE  	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1A)     //0xc002001a
#define STATUS_SEC_PUBK_AUTH_MISMATCH_N       	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1B)     //0xc002001b
#define STATUS_SEC_PUBK_AUTH_MISMATCH_E       	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1C)     //0xc002001c
#define STATUS_SEC_PUBK_AUTH_MISMATCH_HASH    	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1D)     //0xc002001d
#define STATUS_SEC_CERT_OBJ_NOT_FOUND         	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1E)     //0xc002001e
#define STATUS_SEC_CERT_OID_NOT_FOUND         	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x1F)     //0xc002001f
#define STATUS_SEC_CERT_OUT_OF_RANGE          	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x20)     //0xc0020020
#define STATUS_SEC_OID_NOT_MATCH              	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x21)     //0xc0020021
#define STATUS_SEC_LEN_NOT_MATCH              	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x22)     //0xc0020022
#define STATUS_SEC_ASN1_UNKNOWN_OP            	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x23)     //0xc0020023
#define STATUS_SEC_OID_IDX_OUT_OF_RANGE       	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x24)     //0xc0020024
#define STATUS_SEC_OID_TOO_LARGE           		        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x25)     //0xc0020025
#define STATUS_SEC_PUBK_SZ_MISMATCH          	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x26)     //0xc0020026
#define STATUS_SEC_SWID_MISMATCH             	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x27)     //0xc0020027
#define STATUS_SEC_HASH_SZ_MISMATCH         	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x28)     //0xc0020028
#define STATUS_SEC_IMGHDR_TYPE_MISMATCH       	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x29)     //0xc0020029
#define STATUS_SEC_IMG_TYPE_MISMATCH          	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2A)     //0xc002002a
#define STATUS_SEC_IMGHDR_HASH_VFY_FAIL      	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2B)     //0xc002002b
#define STATUS_SEC_IMG_HASH_VFY_FAIL          	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2C)     //0xc002002c
#define STATUS_SEC_VIOLATE_ANTI_ROLLBACK     	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2D)     //0xc002002d
#define STATUS_SEC_SECCFG_NOT_FOUND           	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2E)     //0xc002002e
#define STATUS_SEC_SECCFG_MAGIC_INCORRECT     	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x2F)     //0xc002002f
#define STATUS_SEC_SECCFG_NOT_VALID           	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x30)     //0xc0020030
#define STATUS_SEC_CIPHER_MODE_INVALID        	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x31)     //0xc0020031
#define STATUS_SEC_CIPHER_KEY_INVALID         	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x32)     //0xc0020032
#define STATUS_SEC_CIPHER_DATA_UNALIGNED      	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x33)     //0xc0020033
#define STATUS_SEC_GFH_FILE_INFO_NOT_FOUND    	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x34)     //0xc0020034
#define STATUS_SEC_GFH_ANTI_CLONE_NOT_FOUND   	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x35)     //0xc0020035
#define STATUS_SEC_GFH_SEC_CFG_NOT_FOUND      	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x36)     //0xc0020036
#define STATUS_SEC_UNSUPPORTED_SOURCE_TYPE    	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x37)     //0xc0020037
#define STATUS_SEC_CUST_NAME_MISMATCH         	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x38)     //0xc0020038
#define STATUS_SEC_INVALID_ADDRESS            	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x39)     //0xc0020039
#define STATUS_SEC_CERT_VER_NOT_SYNC          	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x40)     //0xc0020040
#define STATUS_SEC_SIG_NOT_SYNC               	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x41)     //0xc0020041
#define STATUS_SEC_EXT_ALL_IN_ONE_SIG_REJECT  	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x42)     //0xc0020042
#define STATUS_SEC_EXT_ALL_IN_ONE_SIG_NOT_EXIST	        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x43)     //0xc0020043
#define STATUS_SEC_COMM_KEY_IS_NOT_SET			        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x44)     //0xc0020044
#define STATUS_SEC_COMM_DEVINFO_CHK_FAIL		        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x45)     //0xc0020045
#define STATUS_SEC_BOOTIMG_COUNT_OVERFLOW		        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x46)     //0xc0020046
#define STATUS_SEC_SIG_NOT_FOUND				        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x47)     //0xc0020047
#define STATUS_SEC_BOOTIMG_SPECIAL_HANDLE		        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x48)     //0xc0020048
#define STATUS_SEC_REMOTE_SECURITY_POLICY_DISABLED	    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x49)     //0xc0020049
#define STATUS_SEC_RSA_OAEP_FAIL					    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4A)     //0xc002004a
#define STATUS_SEC_INSUFFICIENT_BUFFER			        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4B)     //0xc002004b
#define STATUS_SEC_IMG_VER_NOT_SYNC                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4C)     //0xc002004c
#define STATUS_SEC_GET_OTP_VALUE_FAIL                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4D)     //0xc002004d
#define STATUS_SEC_INVALID_UNIT_SZ                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4E)     //0xc002004e
#define STATUS_SEC_INVALID_GROUP_IDX                    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x4F)     //0xc002004f
#define STATUS_SEC_IMG_VER_OVERFLOW                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x50)     //0xc0020050
#define STATUS_SEC_OTP_TABLE_NOT_INIT                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x51)     //0xc0020051
#define STATUS_SEC_INVALID_PART_NAME                    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x52)     //0xc0020052
#define STATUS_SEC_INVALID_DA_VER                       MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x53)     //0xc0020053
#define STATUS_SEC_RPMB_INVALID_MSG_SZ                  MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x54)     //0xc0020054
#define STATUS_SEC_SEC_LEVEL_UNSUPPORT                  MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x55)     //0xc0020055
#define STATUS_SEC_SEC_LEVEL_MISMATCH                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x56)     //0xc0020056
#define STATUS_SEC_FAULT_INJECTION                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x57)     //0xc0020057
#define STATUS_SEC_PUBK_HASH_GROUP_INVALID              MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x58)     //0xc0020058
#define STATUS_SEC_SEC_LEVEL_OVERFLOW                   MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x59)     //0xc0020059

/* Extension SECCFG error code */
#define STATUS_SEC_SECCFG_IS_FORMATTED                  MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5A)     //0xc002005a
#define STATUS_SEC_SECCFG_UNKNOWN_ERROR                 MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5B)     //0xc002005b
#define STATUS_SEC_LKS_SECCFG_FAIL                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5C)     //0xc002005c
#define STATUS_SEC_LKS_CUSTOM_FAIL                      MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5D)     //0xc002005d
#define STATUS_SEC_LKS_NOT_EQUAL                        MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0x5E)     //0xc002005e

/*Security common error code*/
#define STATUS_SEC_INVALID_BUF_SZ                       MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xA1)     //0xc00200A1
#define STATUS_SEC_LEN_SIZE_INVALID                     MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xA2)     //0xc00200A2
#define STATUS_SEC_IMG_VER_NOT_FOUND                    MAKE_CODE(SEV_ERROR, FACILITY_AUTHENTICATION, 0xA3)     //0xc00200A3
