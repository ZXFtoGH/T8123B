/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef PLL_H
#define PLL_H
#include "platform.h"

/* for MT6893 DISP/MDP MTCMOS on/off APIs  */
#define INFRA_TOPAXI_PROTECTEN			(INFRACFG_AO_BASE + 0x0220)
#define INFRA_TOPAXI_PROTECTEN_SET		(INFRACFG_AO_BASE + 0x02A0)
#define INFRA_TOPAXI_PROTECTEN_CLR		(INFRACFG_AO_BASE + 0x02A4)
#define INFRA_TOPAXI_PROTECTEN_STA0		(INFRACFG_AO_BASE + 0x0224)
#define INFRA_TOPAXI_PROTECTEN_STA1		(INFRACFG_AO_BASE + 0x0228)

#define INFRA_TOPAXI_PROTECTEN_1		(INFRACFG_AO_BASE + 0x0250)
#define INFRA_TOPAXI_PROTECTEN_1_SET		(INFRACFG_AO_BASE + 0x02A8)
#define INFRA_TOPAXI_PROTECTEN_1_CLR		(INFRACFG_AO_BASE + 0x02AC)
#define INFRA_TOPAXI_PROTECTEN_STA0_1		(INFRACFG_AO_BASE + 0x0254)
#define INFRA_TOPAXI_PROTECTEN_STA1_1		(INFRACFG_AO_BASE + 0x0258)

#define INFRA_TOPAXI_PROTECTEN_MCU		(INFRACFG_AO_BASE + 0x02C0)
#define INFRA_TOPAXI_PROTECTEN_MCU_STA0		(INFRACFG_AO_BASE + 0x02E0)
#define INFRA_TOPAXI_PROTECTEN_MCU_STA1		(INFRACFG_AO_BASE + 0x02E4)
#define INFRA_TOPAXI_PROTECTEN_MCU_SET		(INFRACFG_AO_BASE + 0x02C4)
#define INFRA_TOPAXI_PROTECTEN_MCU_CLR		(INFRACFG_AO_BASE + 0x02C8)

#define INFRA_TOPAXI_PROTECTEN_MM		(INFRACFG_AO_BASE + 0x02D0)
#define INFRA_TOPAXI_PROTECTEN_MM_SET		(INFRACFG_AO_BASE + 0x02D4)
#define INFRA_TOPAXI_PROTECTEN_MM_CLR		(INFRACFG_AO_BASE + 0x02D8)
#define INFRA_TOPAXI_PROTECTEN_MM_STA0		(INFRACFG_AO_BASE + 0x02E8)
#define INFRA_TOPAXI_PROTECTEN_MM_STA1		(INFRACFG_AO_BASE + 0x02EC)

#define INFRA_TOPAXI_PROTECTEN_2		(INFRACFG_AO_BASE + 0x0710)
#define INFRA_TOPAXI_PROTECTEN_2_SET		(INFRACFG_AO_BASE + 0x0714)
#define INFRA_TOPAXI_PROTECTEN_2_CLR		(INFRACFG_AO_BASE + 0x0718)
#define INFRA_TOPAXI_PROTECTEN_STA0_2		(INFRACFG_AO_BASE + 0x0720)
#define INFRA_TOPAXI_PROTECTEN_STA1_2		(INFRACFG_AO_BASE + 0x0724)

#define INFRA_TOPAXI_PROTECTEN_MM_2		(INFRACFG_AO_BASE + 0x0DC8)
#define INFRA_TOPAXI_PROTECTEN_MM_2_SET		(INFRACFG_AO_BASE + 0x0DCC)
#define INFRA_TOPAXI_PROTECTEN_MM_2_CLR		(INFRACFG_AO_BASE + 0x0DD0)
#define INFRA_TOPAXI_PROTECTEN_MM_2_STA0	(INFRACFG_AO_BASE + 0x0DD4)
#define INFRA_TOPAXI_PROTECTEN_MM_2_STA1	(INFRACFG_AO_BASE + 0x0DD8)

#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR		(INFRACFG_AO_BASE + 0x0B80)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_SET		(INFRACFG_AO_BASE + 0x0B84)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_CLR		(INFRACFG_AO_BASE + 0x0B88)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_STA0		(INFRACFG_AO_BASE + 0x0B8c)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_STA1		(INFRACFG_AO_BASE + 0x0B90)

#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_1		(INFRACFG_AO_BASE + 0x0BA0)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_1_SET		(INFRACFG_AO_BASE + 0x0BA4)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_1_CLR		(INFRACFG_AO_BASE + 0x0BA8)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_1_STA0	(INFRACFG_AO_BASE + 0x0BAc)
#define INFRA_TOPAXI_PROTECTEN_INFRA_VDNR_1_STA1	(INFRACFG_AO_BASE + 0x0BB0)

#define INFRA_TOPAXI_PROTECTEN_SUB_INFRA_VDNR		(INFRACFG_AO_BASE + 0x0BB4)
#define INFRA_TOPAXI_PROTECTEN_SUB_INFRA_VDNR_SET	(INFRACFG_AO_BASE + 0x0BB8)
#define INFRA_TOPAXI_PROTECTEN_SUB_INFRA_VDNR_CLR	(INFRACFG_AO_BASE + 0x0BBC)
#define INFRA_TOPAXI_PROTECTEN_SUB_INFRA_VDNR_STA0	(INFRACFG_AO_BASE + 0x0BC0)
#define INFRA_TOPAXI_PROTECTEN_SUB_INFRA_VDNR_STA1	(INFRACFG_AO_BASE + 0x0BC4)

/* MCUCFG Register, for MT6893 */
#define CPU_PLLDIV_CFG0          (MCUCFG_BASE + 0xA2A0) //ARMPLL_LL
#define CPU_PLLDIV_CFG1          (MCUCFG_BASE + 0xA2A4) //ARMPLL_BL1
#define CPU_PLLDIV_CFG2          (MCUCFG_BASE + 0xA2A8) //ARMPLL_BL2
#define CPU_PLLDIV_CFG3          (MCUCFG_BASE + 0xA2AC) //ARMPLL_BL3
#define CPU_PLLDIV_CFG4          (MCUCFG_BASE + 0xA2B0) //ARMPLL_BL0
#define BUS_PLLDIV_CFG           (MCUCFG_BASE + 0xA2E0) //CCIPLL

/* APMIXEDSYS Register */
#define AP_PLL_CON0             (APMIXED_BASE + 0x000)
#define AP_PLL_CON5		(APMIXED_BASE + 0x014)
#define PLLON_CON0		(APMIXED_BASE + 0x050)
#define PLLON_CON1		(APMIXED_BASE + 0x054)
#define PLLON_CON2		(APMIXED_BASE + 0x058)
#define PLLON_CON3		(APMIXED_BASE + 0x05C)

#define AP_PLLGP1_CON0		(APMIXED_BASE + 0x200)
#define AP_PLLGP1_CON1		(APMIXED_BASE + 0x204)
#define AP_PLLGP2_CON0		(APMIXED_BASE + 0x300)
#define AP_PLLGP2_CON1		(APMIXED_BASE + 0x304)

#define ARMPLL_LL_CON0          (APMIXED_BASE + 0x208)
#define ARMPLL_LL_CON1          (APMIXED_BASE + 0x20C)
#define ARMPLL_LL_CON2          (APMIXED_BASE + 0x210)
#define ARMPLL_LL_CON3          (APMIXED_BASE + 0x214)

#define ARMPLL_BL0_CON0		(APMIXED_BASE + 0x218)
#define ARMPLL_BL0_CON1		(APMIXED_BASE + 0x21C)
#define ARMPLL_BL0_CON2		(APMIXED_BASE + 0x220)
#define ARMPLL_BL0_CON3		(APMIXED_BASE + 0x224)

#define ARMPLL_BL1_CON0		(APMIXED_BASE + 0x228)
#define ARMPLL_BL1_CON1		(APMIXED_BASE + 0x22C)
#define ARMPLL_BL1_CON2		(APMIXED_BASE + 0x230)
#define ARMPLL_BL1_CON3		(APMIXED_BASE + 0x234)

#define ARMPLL_BL2_CON0		(APMIXED_BASE + 0x238)
#define ARMPLL_BL2_CON1		(APMIXED_BASE + 0x23C)
#define ARMPLL_BL2_CON2		(APMIXED_BASE + 0x240)
#define ARMPLL_BL2_CON3		(APMIXED_BASE + 0x244)

#define ARMPLL_BL3_CON0		(APMIXED_BASE + 0x248)
#define ARMPLL_BL3_CON1		(APMIXED_BASE + 0x24C)
#define ARMPLL_BL3_CON2		(APMIXED_BASE + 0x250)
#define ARMPLL_BL3_CON3		(APMIXED_BASE + 0x254)

#define CCIPLL_CON0		(APMIXED_BASE + 0x258)
#define CCIPLL_CON1		(APMIXED_BASE + 0x25C)
#define CCIPLL_CON2		(APMIXED_BASE + 0x260)
#define CCIPLL_CON3		(APMIXED_BASE + 0x264)

#define MFGPLL_CON0		(APMIXED_BASE + 0x268)
#define MFGPLL_CON1		(APMIXED_BASE + 0x26C)
#define MFGPLL_CON3		(APMIXED_BASE + 0x274)

#define UNIVPLL_CON0		(APMIXED_BASE + 0x308)
#define UNIVPLL_CON1		(APMIXED_BASE + 0x30C)
#define UNIVPLL_CON3		(APMIXED_BASE + 0x314)

#define APLL1_CON0		(APMIXED_BASE + 0x318)
#define APLL1_CON1		(APMIXED_BASE + 0x31C)
#define APLL1_CON2		(APMIXED_BASE + 0x320)
#define APLL1_CON3		(APMIXED_BASE + 0x324)
#define APLL1_CON4		(APMIXED_BASE + 0x328)

#define APLL2_CON0		(APMIXED_BASE + 0x32C)
#define APLL2_CON1		(APMIXED_BASE + 0x330)
#define APLL2_CON2		(APMIXED_BASE + 0x334)
#define APLL2_CON3		(APMIXED_BASE + 0x338)
#define APLL2_CON4		(APMIXED_BASE + 0x33C)

#define MAINPLL_CON0            (APMIXED_BASE + 0x340)
#define MAINPLL_CON1            (APMIXED_BASE + 0x344)
#define MAINPLL_CON3		(APMIXED_BASE + 0x34C)

#define MSDCPLL_CON0		(APMIXED_BASE + 0x350)
#define MSDCPLL_CON1		(APMIXED_BASE + 0x354)
#define MSDCPLL_CON3		(APMIXED_BASE + 0x35C)

#define MMPLL_CON0		(APMIXED_BASE + 0x360)
#define MMPLL_CON1		(APMIXED_BASE + 0x364)
#define MMPLL_CON3		(APMIXED_BASE + 0x36C)

#define ADSPPLL_CON0		(APMIXED_BASE + 0x370)
#define ADSPPLL_CON1		(APMIXED_BASE + 0x374)
#define ADSPPLL_CON3		(APMIXED_BASE + 0x37C)

#define TVDPLL_CON0		(APMIXED_BASE + 0x380)
#define TVDPLL_CON1		(APMIXED_BASE + 0x384)
#define TVDPLL_CON3		(APMIXED_BASE + 0x38C)

#define MPLL_CON0		(APMIXED_BASE + 0x390)
#define MPLL_CON1		(APMIXED_BASE + 0x394)
#define MPLL_CON3		(APMIXED_BASE + 0x39C)

#define APUPLL_CON0		(APMIXED_BASE + 0x3A0)
#define APUPLL_CON1		(APMIXED_BASE + 0x3A4)
#define APUPLL_CON3		(APMIXED_BASE + 0x3AC)


/* TOPCKGEN Register */
#define CLK_CFG_UPDATE          (TOPCKGEN_BASE + 0x004)
#define CLK_CFG_UPDATE1         (TOPCKGEN_BASE + 0x008)
#define CLK_CFG_UPDATE2         (TOPCKGEN_BASE + 0x00C)

#define CLK_CFG_0_SET           (TOPCKGEN_BASE + 0x014)
#define CLK_CFG_0_CLR           (TOPCKGEN_BASE + 0x018)
#define CLK_CFG_1_SET           (TOPCKGEN_BASE + 0x024)
#define CLK_CFG_1_CLR           (TOPCKGEN_BASE + 0x028)
#define CLK_CFG_2_SET           (TOPCKGEN_BASE + 0x034)
#define CLK_CFG_2_CLR           (TOPCKGEN_BASE + 0x038)
#define CLK_CFG_3_SET           (TOPCKGEN_BASE + 0x044)
#define CLK_CFG_3_CLR           (TOPCKGEN_BASE + 0x048)
#define CLK_CFG_4_SET           (TOPCKGEN_BASE + 0x054)
#define CLK_CFG_4_CLR           (TOPCKGEN_BASE + 0x058)
#define CLK_CFG_5_SET           (TOPCKGEN_BASE + 0x064)
#define CLK_CFG_5_CLR           (TOPCKGEN_BASE + 0x068)
#define CLK_CFG_6_SET           (TOPCKGEN_BASE + 0x074)
#define CLK_CFG_6_CLR           (TOPCKGEN_BASE + 0x078)
#define CLK_CFG_7_SET           (TOPCKGEN_BASE + 0x084)
#define CLK_CFG_7_CLR           (TOPCKGEN_BASE + 0x088)
#define CLK_CFG_8_SET           (TOPCKGEN_BASE + 0x094)
#define CLK_CFG_8_CLR           (TOPCKGEN_BASE + 0x098)
#define CLK_CFG_9_SET           (TOPCKGEN_BASE + 0x0A4)
#define CLK_CFG_9_CLR           (TOPCKGEN_BASE + 0x0A8)
#define CLK_CFG_10_SET          (TOPCKGEN_BASE + 0x0B4)
#define CLK_CFG_10_CLR          (TOPCKGEN_BASE + 0x0B8)
#define CLK_CFG_11_SET          (TOPCKGEN_BASE + 0x0C4)
#define CLK_CFG_11_CLR          (TOPCKGEN_BASE + 0x0C8)
#define CLK_CFG_12_SET          (TOPCKGEN_BASE + 0x0D4)
#define CLK_CFG_12_CLR          (TOPCKGEN_BASE + 0x0D8)
#define CLK_CFG_13_SET          (TOPCKGEN_BASE + 0x0E4)
#define CLK_CFG_13_CLR          (TOPCKGEN_BASE + 0x0E8)
#define CLK_CFG_14_SET          (TOPCKGEN_BASE + 0x0F4)
#define CLK_CFG_14_CLR          (TOPCKGEN_BASE + 0x0F8)
#define CLK_CFG_15_SET          (TOPCKGEN_BASE + 0x104)
#define CLK_CFG_15_CLR          (TOPCKGEN_BASE + 0x108)
#define CLK_CFG_16_SET          (TOPCKGEN_BASE + 0x114)
#define CLK_CFG_16_CLR          (TOPCKGEN_BASE + 0x118)

#define CLK_MISC_CFG_0		(TOPCKGEN_BASE + 0x140)
#define CLK_MISC_CFG_1		(TOPCKGEN_BASE + 0x150)
#define CLK_DBG_CFG		(TOPCKGEN_BASE + 0x17C)
#define CLK_SCP_CFG_0		(TOPCKGEN_BASE + 0x200)
#define CLK_SCP_CFG_1		(TOPCKGEN_BASE + 0x210)
#define CLK26CALI_0		(TOPCKGEN_BASE + 0x220)
#define CLK26CALI_1		(TOPCKGEN_BASE + 0x224)

/* INFRASYS Register */
#define INFRA_BUS_DCM_CTRL	(INFRACFG_AO_BASE + 0x70)

#define INFRA_PDN_SET0          (INFRACFG_AO_BASE + 0x0080)
#define INFRA_PDN_CLR0          (INFRACFG_AO_BASE + 0x0084)
#define INFRA_PDN_SET1          (INFRACFG_AO_BASE + 0x0088)
#define INFRA_PDN_CLR1          (INFRACFG_AO_BASE + 0x008C)
#define INFRA_PDN_SET2          (INFRACFG_AO_BASE + 0x00A4)
#define INFRA_PDN_CLR2          (INFRACFG_AO_BASE + 0x00A8)
#define INFRA_PDN_SET3          (INFRACFG_AO_BASE + 0x00C0)
#define INFRA_PDN_CLR3          (INFRACFG_AO_BASE + 0x00C4)


/* legacy driver support */
#define MODULE_SW_CG_0		(INFRACFG_AO_BASE + 0x0090)
#define MODULE_SW_CG_1		(INFRACFG_AO_BASE + 0x0094)
#define MODULE_SW_CG_2		(INFRACFG_AO_BASE + 0x00AC)
#define MODULE_SW_CG_3		(INFRACFG_AO_BASE + 0x00C8)
#define MODULE_SW_CG_0_SET	INFRA_PDN_SET0
#define MODULE_SW_CG_0_CLR	INFRA_PDN_CLR0
#define MODULE_SW_CG_1_SET	INFRA_PDN_SET1
#define MODULE_SW_CG_1_CLR	INFRA_PDN_CLR1
#define MODULE_SW_CG_2_SET	INFRA_PDN_SET2
#define MODULE_SW_CG_2_CLR	INFRA_PDN_CLR2
#define MODULE_SW_CG_3_SET	INFRA_PDN_SET3
#define MODULE_SW_CG_3_CLR	INFRA_PDN_CLR3


/* MMSYS Register*/

#define DISP_CG_CON0            (MMSYS_CONFIG_BASE + 0x100)
#define DISP_CG_SET0            (MMSYS_CONFIG_BASE + 0x104)
#define DISP_CG_CLR0            (MMSYS_CONFIG_BASE + 0x108)
#define DISP_CG_CON1            (MMSYS_CONFIG_BASE + 0x110)
#define DISP_CG_SET1            (MMSYS_CONFIG_BASE + 0x114)
#define DISP_CG_CLR1            (MMSYS_CONFIG_BASE + 0x118)
#define DISP_CG_CON2            (MMSYS_CONFIG_BASE + 0x1a0)
#define DISP_CG_SET2            (MMSYS_CONFIG_BASE + 0x1a4)
#define DISP_CG_CLR2            (MMSYS_CONFIG_BASE + 0x1a8)

/* MDPSYS Register*/
#define MDP_CG_CON0		(MDPSYS_CONFIG_BASE + 0x100)
#define MDP_CG_SET0		(MDPSYS_CONFIG_BASE + 0x104)
#define MDP_CG_CLR0		(MDPSYS_CONFIG_BASE + 0x108)
#define MDP_CG_CON1		(MDPSYS_CONFIG_BASE + 0x110)
#define MDP_CG_SET1		(MDPSYS_CONFIG_BASE + 0x114)
#define MDP_CG_CLR1		(MDPSYS_CONFIG_BASE + 0x118)
#define MDP_CG_CON2		(MDPSYS_CONFIG_BASE + 0x120)
#define MDP_CG_SET2		(MDPSYS_CONFIG_BASE + 0x124)
#define MDP_CG_CLR2		(MDPSYS_CONFIG_BASE + 0x128)

/* MCUSYS Register */
#define CKDIV1_LL_CFG		(MCUCFG_BASE + 0xA2A0)
#define CKDIV1_L_CFG		(MCUCFG_BASE + 0xA2A4)
#define CKDIV1_L_CFG_2		(MCUCFG_BASE + 0xA2A8)
#define CKDIV1_L_CFG_3		(MCUCFG_BASE + 0xA2AC)
#define CKDIV1_L_CFG_4		(MCUCFG_BASE + 0xA2B0)

/*  CPU Freq Boost*/
enum cpu_opp {
	CPU_OPP0 = 0,
	CPU_OPP1,
	CPU_OPP2,
	CPU_OPP3,
	CPU_OPP4,
	CPU_OPP5,
	CPU_OPP_NUM,
};

/*
 * CLKMGR EXTERN FUNCTIONS
 */
extern unsigned int mt_get_abist_freq(unsigned int ID);
extern void mt_get_cpu_freq(void);
extern void set_armpll_ll_rate(enum cpu_opp opp);
#endif
