###################################################################
# Setting Internal Feature Compiler Option
###################################################################

ifdef HW_INIT_ONLY
C_OPTION += -DHW_INIT_ONLY
export HW_INIT_ONLY
endif

###################################################################
# Setting Feature Compiler Option
###################################################################

ifdef CFG_BOOT_DEV
C_OPTION += -DCFG_BOOT_DEV="$(CFG_BOOT_DEV)"
export CFG_BOOT_DEV
ifeq ($(strip "$(CFG_MMC_COMBO_DRV)"),"1")
C_OPTION += -DCFG_MMC_COMBO_DRV
export CFG_MMC_COMBO_DRV
endif
endif

ifdef CFG_DRAM_LOG_TO_STORAGE
C_OPTION += -DCFG_DRAM_LOG_TO_STORAGE="$(CFG_DRAM_LOG_TO_STORAGE)"
export CFG_DRAM_LOG_TO_STORAGE
else
C_OPTION += -DCFG_DRAM_LOG_TO_STORAGE=0
export CFG_DRAM_LOG_TO_STORAGE
endif
ifdef CFG_K_LOG_TO_STORAGE
C_OPTION += -DCFG_K_LOG_TO_STORAGE="$(CFG_K_LOG_TO_STORAGE)"
export CFG_K_LOG_TO_STORAGE
else
C_OPTION += -DCFG_K_LOG_TO_STORAGE=0
export CFG_K_LOG_TO_STORAGE
endif
ifdef CFG_DRAM_CALIB_OPTIMIZATION
C_OPTION += -DCFG_DRAM_CALIB_OPTIMIZATION="$(CFG_DRAM_CALIB_OPTIMIZATION)"
export CFG_DRAM_CALIB_OPTIMIZATION
else
C_OPTION += -DCFG_DRAM_CALIB_OPTIMIZATION=0
export CFG_DRAM_CALIB_OPTIMIZATION
endif

ifdef CFG_LPDDR_ENABLE
C_OPTION += -DCFG_LPDDR_ENABLE="$(CFG_LPDDR_ENABLE)"
export CFG_LPDDR_ENABLE
endif

ifdef CFG_PCDDR_ENABLE
C_OPTION += -DCFG_PCDDR_ENABLE="$(CFG_PCDDR_ENABLE)"
export CFG_PCDDR_ENABLE
endif

ifdef CFG_ENABLE_DCACHE
C_OPTION += -DCFG_ENABLE_DCACHE="$(CFG_ENABLE_DCACHE)"
export CFG_ENABLE_DCACHE
endif

ifdef CFG_LAST_EMI_BW_DUMP
C_OPTION += -DCFG_LAST_EMI_BW_DUMP="$(CFG_LAST_EMI_BW_DUMP)"
export CFG_LAST_EMI_BW_DUMP
else
C_OPTION += -DCFG_LAST_EMI_BW_DUMP=0
export CFG_LAST_EMI_BW_DUMP
endif

ifdef CFG_FPGA_PLATFORM
C_OPTION += -DCFG_FPGA_PLATFORM="$(CFG_FPGA_PLATFORM)"
export CFG_FPGA_PLATFORM
endif

ifdef CFG_SVP3_PLATFORM
C_OPTION += -DCFG_SVP3_PLATFORM="$(CFG_SVP3_PLATFORM)"
export CFG_SVP3_PLATFORM
endif

ifdef CFG_EVB_PLATFORM
C_OPTION += -DCFG_EVB_PLATFORM="$(CFG_EVB_PLATFORM)"
export CFG_EVB_PLATFORM
endif

ifdef CFG_BATTERY_DETECT
C_OPTION += -DCFG_BATTERY_DETECT="$(CFG_BATTERY_DETECT)"
export CFG_BATTERY_DETECT
endif

ifdef CFG_UART_TOOL_HANDSHAKE
C_OPTION += -DCFG_UART_TOOL_HANDSHAKE="$(CFG_UART_TOOL_HANDSHAKE)"
export CFG_UART_TOOL_HANDSHAKE
endif

ifdef CFG_USB_TOOL_HANDSHAKE
C_OPTION += -DCFG_USB_TOOL_HANDSHAKE="$(CFG_USB_TOOL_HANDSHAKE)"
export CFG_USB_TOOL_HANDSHAKE
endif

ifdef CFG_USB_DOWNLOAD
C_OPTION += -DCFG_USB_DOWNLOAD="$(CFG_USB_DOWNLOAD)"
export CFG_USB_DOWNLOAD
endif

ifdef CFG_PMT_SUPPORT
C_OPTION += -DCFG_PMT_SUPPORT="$(CFG_PMT_SUPPORT)"
export CFG_PMT_SUPPORT
endif

ifdef CFG_UART_LOG
C_OPTION += -DCFG_UART_LOG="$(CFG_UART_LOG)"
export CFG_UART_LOG
endif

ifdef CFG_UART_COMMON
C_OPTION += -DCFG_UART_COMMON="$(CFG_UART_COMMON)"
export CFG_UART_COMMON
endif
ifdef CFG_UART_META
C_OPTION += -DCFG_UART_META="$(CFG_UART_META)"
export CFG_UART_META
endif

ifdef CFG_LOG_BAUDRATE
C_OPTION += -DCFG_LOG_BAUDRATE="$(CFG_LOG_BAUDRATE)"
export CFG_LOG_BAUDRATE
endif

ifdef CFG_FPGA_UART_CLOCK
C_OPTION += -DCFG_FPGA_UART_CLOCK="$(CFG_FPGA_UART_CLOCK)"
export CFG_FPGA_UART_CLOCK
endif

ifdef CFG_EVB_UART_CLOCK
C_OPTION += -DCFG_EVB_UART_CLOCK="$(CFG_EVB_UART_CLOCK)"
export CFG_EVB_UART_CLOCK
endif

ifdef CFG_META_BAUDRATE
C_OPTION += -DCFG_META_BAUDRATE="$(CFG_META_BAUDRATE)"
export CFG_META_BAUDRATE
endif

ifdef CFG_EMERGENCY_DL_SUPPORT
C_OPTION += -DCFG_EMERGENCY_DL_SUPPORT="$(CFG_EMERGENCY_DL_SUPPORT)"
export CFG_EMERGENCY_DL_SUPPORT
endif

ifdef CFG_EMERGENCY_DL_TIMEOUT_MS
C_OPTION += -DCFG_EMERGENCY_DL_TIMEOUT_MS="$(CFG_EMERGENCY_DL_TIMEOUT_MS)"
export CFG_EMERGENCY_DL_TIMEOUT_MS
endif

ifdef CFG_MMC_ADDR_TRANS
C_OPTION += -DCFG_MMC_ADDR_TRANS="$(CFG_MMC_ADDR_TRANS)"
export CFG_MMC_ADDR_TRANS
endif

ifeq ("$(MTK_UART_USB_SWITCH)","yes")
C_OPTION += -DMTK_UART_USB_SWITCH
export MTK_UART_USB_SWITCH
endif

ifdef CFG_OUTPUT_PL_LOG_TO_UART1
C_OPTION += -DCFG_OUTPUT_PL_LOG_TO_UART1="$(CFG_OUTPUT_PL_LOG_TO_UART1)"
export CFG_OUTPUT_PL_LOG_TO_UART1
endif

ifdef CFG_BOOT_TAG_VERSION
C_OPTION += -DCFG_BOOT_TAG_VERSION="$(CFG_BOOT_TAG_VERSION)"
export CFG_BOOT_TAG_VERSION
endif

ifdef CFG_RAM_CONSOLE
C_OPTION += -DCFG_RAM_CONSOLE="$(CFG_RAM_CONSOLE)"
export CFG_RAM_CONSOLE
endif

ifdef CFG_SYSTIMER
C_OPTION += -DCFG_SYSTIMER="$(CFG_SYSTIMER)"
export CFG_SYSTIMER
endif

ifdef CFG_DA_SYSTMR7
C_OPTION += -DCFG_DA_SYSTMR7="$(CFG_DA_SYSTMR7)"
export CFG_DA_SYSTMR7
endif

ifdef CFG_APWDT
C_OPTION += -DCFG_APWDT="$(CFG_APWDT)"
export CFG_APWDT
endif

ifdef CFG_APWDT_DISABLE
C_OPTION += -DCFG_APWDT_DISABLE="$(CFG_APWDT_DISABLE)"
export CFG_APWDT_DISABLE
endif

ifdef CFG_APWDT_LVL_IRQ
C_OPTION += -DCFG_APWDT_LVL_IRQ="$(CFG_APWDT_LVL_IRQ)"
export CFG_APWDT_LVL_IRQ
endif

ifdef CFG_APWDT_REQ_MODE
C_OPTION += -DCFG_APWDT_REQ_MODE="$(CFG_APWDT_REQ_MODE)"
export CFG_APWDT_REQ_MODE
endif

ifdef CFG_APWDT_STA_V2
C_OPTION += -DCFG_APWDT_STA_V2="$(CFG_APWDT_STA_V2)"
export CFG_APWDT_STA_V2
endif

ifdef CFG_FORCE_RECOVERY
C_OPTION += -DCFG_FORCE_RECOVERY="$(CFG_FORCE_RECOVERY)"
export CFG_FORCE_RECOVERY
endif

ifdef CFG_APWDT_REQ_IRQ
C_OPTION += -DCFG_APWDT_REQ_IRQ="$(CFG_APWDT_REQ_IRQ)"
export CFG_APWDT_REQ_IRQ
endif

ifdef CFG_APWDT_REQ_BYPASS
C_OPTION += -DCFG_APWDT_REQ_BYPASS="$(CFG_APWDT_REQ_BYPASS)"
export CFG_APWDT_REQ_BYPASS
endif

ifdef CFG_SYS_STACK_SZ
C_OPTION += -DCFG_SYS_STACK_SZ="$(CFG_SYS_STACK_SZ)"
export CFG_SYS_STACK_SZ
endif

#load images
ifdef CFG_LOAD_UBOOT
C_OPTION += -DCFG_LOAD_UBOOT="$(CFG_LOAD_UBOOT)"
export CFG_LOAD_UBOOT
endif

ifdef CFG_LOAD_AP_ROM
C_OPTION += -DCFG_LOAD_AP_ROM="$(CFG_LOAD_AP_ROM)"
export CFG_LOAD_AP_ROM
endif

ifdef CFG_LOAD_MD_ROM
C_OPTION += -DCFG_LOAD_MD_ROM="$(CFG_LOAD_MD_ROM)"
export CFG_LOAD_MD_ROM
endif

ifdef CFG_LOAD_MD_RAMDISK
C_OPTION += -DCFG_LOAD_MD_RAMDISK="$(CFG_LOAD_MD_RAMDISK)"
export CFG_LOAD_MD_RAMDISK
endif

ifdef CFG_LOAD_CONN_SYS
C_OPTION += -DCFG_LOAD_CONN_SYS="$(CFG_LOAD_CONN_SYS)"
export CFG_LOAD_CONN_SYS
endif

ifdef CFG_LOAD_BL2_EXT
C_OPTION += -DCFG_LOAD_BL2_EXT="$(CFG_LOAD_BL2_EXT)"
export CFG_LOAD_BL2_EXT
endif


ifdef CFG_UBOOT_MEMADDR
C_OPTION += -DCFG_UBOOT_MEMADDR="$(CFG_UBOOT_MEMADDR)"
export CFG_UBOOT_MEMADDR
endif

ifdef CFG_AP_ROM_MEMADDR
C_OPTION += -DCFG_AP_ROM_MEMADDR="$(CFG_AP_ROM_MEMADDR)"
export CFG_AP_ROM_MEMADDR
endif

ifdef CFG_AP_ROM_ARM64
C_OPTION += -DCFG_AP_ROM_ARM64="$(CFG_AP_ROM_ARM64)"
export CFG_AP_ROM_ARM64
endif

ifdef CFG_MD1_ROM_MEMADDR
C_OPTION += -DCFG_MD1_ROM_MEMADDR="$(CFG_MD1_ROM_MEMADDR)"
export CFG_MD1_ROM_MEMADDR
endif

ifdef CFG_MD1_RAMDISK_MEMADDR
C_OPTION += -DCFG_MD1_RAMDISK_MEMADDR="$(CFG_MD1_RAMDISK_MEMADDR)"
export CFG_MD1_RAMDISK_MEMADDR
endif

ifdef CFG_MD2_ROM_MEMADDR
C_OPTION += -DCFG_MD2_ROM_MEMADDR="$(CFG_MD2_ROM_MEMADDR)"
export CFG_MD2_ROM_MEMADDR
endif

ifdef CFG_MD2_RAMDISK_MEMADDR
C_OPTION += -DCFG_MD2_RAMDISK_MEMADDR="$(CFG_MD2_RAMDISK_MEMADDR)"
export CFG_MD2_RAMDISK_MEMADDR
endif

ifdef CFG_LOAD_MD3_ROM
C_OPTION += -DCFG_LOAD_MD3_ROM="$(CFG_LOAD_MD3_ROM)"
export CFG_LOAD_MD3_ROM
endif

ifdef CFG_MD3_ROM_MEMADDR
C_OPTION += -DCFG_MD3_ROM_MEMADDR="$(CFG_MD3_ROM_MEMADDR)"
export CFG_MD3_ROM_MEMADDR
endif

ifdef CFG_CONN_SYS_MEMADDR
C_OPTION += -DCFG_CONN_SYS_MEMADDR="$(CFG_CONN_SYS_MEMADDR)"
export CFG_CONN_SYS_MEMADDR
endif

ifdef CFG_BOOTA64_MEMADDR
C_OPTION += -DCFG_BOOTA64_MEMADDR="$(CFG_BOOTA64_MEMADDR)"
export CFG_BOOTA64_MEMADDR
endif

ifdef CFG_DTB_MEMADDR
C_OPTION += -DCFG_DTB_MEMADDR="$(CFG_DTB_MEMADDR)"
export CFG_DTB_MEMADDR
endif

ifdef CFG_IMAGE_AARCH64_MEMADDR
C_OPTION += -DCFG_IMAGE_AARCH64_MEMADDR="$(CFG_IMAGE_AARCH64_MEMADDR)"
export CFG_IMAGE_AARCH64_MEMADDR
endif

ifdef CFG_WORLD_PHONE_SUPPORT
C_OPTION += -DCFG_WORLD_PHONE_SUPPORT="$(CFG_WORLD_PHONE_SUPPORT)"
export CFG_WORLD_PHONE_SUPPORT
endif

ifdef CFG_LPRST_SUPPORT
C_OPTION += -DCFG_LPRST_SUPPORT="$(CFG_LPRST_SUPPORT)"
export CFG_LPRST_SUPPORT
endif

ifdef KPD_PMIC_LPRST_TD
C_OPTION += -DKPD_PMIC_LPRST_TD="$(KPD_PMIC_LPRST_TD)"
export KPD_PMIC_LPRST_TD
endif

ifdef ONEKEY_REBOOT_NORMAL_MODE_PL
C_OPTION += -DONEKEY_REBOOT_NORMAL_MODE_PL="$(ONEKEY_REBOOT_NORMAL_MODE_PL)"
export ONEKEY_REBOOT_NORMAL_MODE_PL
endif

ifdef CFG_FEATURE_ENCODE
C_OPTION += -DCFG_FEATURE_ENCODE="$(CFG_FEATURE_ENCODE)"
export CFG_FEATURE_ENCODE
endif

ifdef CFG_USB_AUTO_DETECT
C_OPTION += -DCFG_USB_AUTO_DETECT="$(CFG_USB_AUTO_DETECT)"
export CFG_USB_AUTO_DETECT
endif

ifdef CFG_USB_AUTO_DETECT_TIMEOUT_MS
C_OPTION += -DCFG_USB_AUTO_DETECT_TIMEOUT_MS="$(CFG_USB_AUTO_DETECT_TIMEOUT_MS)"
export CFG_USB_AUTO_DETECT_TIMEOUT_MS
endif

ifdef CFG_LOAD_SLT_MD_RAMDISK
C_OPTION += -DCFG_LOAD_SLT_MD_RAMDISK="$(CFG_LOAD_SLT_MD_RAMDISK)"
export CFG_LOAD_SLT_MD_RAMDISK
endif

ifdef CFG_LOAD_SLT_MD_DSP
C_OPTION += -DCFG_LOAD_SLT_MD_DSP="$(CFG_LOAD_SLT_MD_DSP)"
export CFG_LOAD_SLT_MD_DSP
endif

ifdef CFG_LOAD_SLT_MD
C_OPTION += -DCFG_LOAD_SLT_MD="$(CFG_LOAD_SLT_MD)"
export CFG_LOAD_SLT_MD
endif

ifdef CFG_TDD_MD_ROM_MEMADDR
C_OPTION += -DCFG_TDD_MD_ROM_MEMADDR="$(CFG_TDD_MD_ROM_MEMADDR)"
export CFG_TDD_MD_ROM_MEMADDR
endif

ifdef CFG_FDD_MD_ROM_MEMADDR
C_OPTION += -DCFG_FDD_MD_ROM_MEMADDR="$(CFG_FDD_MD_ROM_MEMADDR)"
export CFG_FDD_MD_ROM_MEMADDR
endif

ifdef CFG_2G_MD_ROM_MEMADDR
C_OPTION += -DCFG_2G_MD_ROM_MEMADDR="$(CFG_2G_MD_ROM_MEMADDR)"
export CFG_2G_MD_ROM_MEMADDR
endif

ifdef CFG_TDD_ONLY_ROM_MEMADDR
C_OPTION += -DCFG_TDD_ONLY_ROM_MEMADDR="$(CFG_TDD_ONLY_ROM_MEMADDR)"
export CFG_TDD_ONLY_ROM_MEMADDR
endif

ifdef CFG_LOAD_SLT_SCP
C_OPTION += -DCFG_LOAD_SLT_SCP="$(CFG_LOAD_SLT_SCP)"
export CFG_LOAD_SLT_SCP
endif

ifdef CFG_SCP_ROM_MEMADDR
C_OPTION += -DCFG_SCP_ROM_MEMADDR="$(CFG_SCP_ROM_MEMADDR)"
export CFG_SCP_ROM_MEMADDR
endif

ifdef CFG_LOAD_SLT_MD32
C_OPTION += -DCFG_LOAD_SLT_MD32="$(CFG_LOAD_SLT_MD32)"
export CFG_LOAD_SLT_MD32
endif

ifdef CFG_MD32P_ROM_MEMADDR
C_OPTION += -DCFG_MD32P_ROM_MEMADDR="$(CFG_MD32P_ROM_MEMADDR)"
export CFG_MD32P_ROM_MEMADDR
endif

ifdef CFG_MD32D_ROM_MEMADDR
C_OPTION += -DCFG_MD32D_ROM_MEMADDR="$(CFG_MD32D_ROM_MEMADDR)"
export CFG_MD32D_ROM_MEMADDR
endif

ifdef CFG_LOAD_SLT_SSPM
C_OPTION += -DCFG_LOAD_SLT_SSPM="$(CFG_LOAD_SLT_SSPM)"
export CFG_LOAD_SLT_SSPM
endif

ifdef CFG_SSPM_MEMADDR
C_OPTION += -DCFG_SSPM_MEMADDR="$(CFG_SSPM_MEMADDR)"
export CFG_SSPM_MEMADDR
endif

ifdef CFG_LOAD_MD_DSP
C_OPTION += -DCFG_LOAD_MD_DSP="$(CFG_LOAD_MD_DSP)"
export CFG_LOAD_MD_DSP
endif

ifdef CFG_MD_DSP_MEMADDR
C_OPTION += -DCFG_MD_DSP_MEMADDR="$(CFG_MD_DSP_MEMADDR)"
export CFG_MD_DSP_MEMADDR
endif

ifdef CFG_USBIF_COMPLIANCE
C_OPTION += -DCFG_USBIF_COMPLIANCE="$(CFG_USBIF_COMPLIANCE)"
export CFG_USBIF_COMPLIANCE
endif

ifdef CFG_ATF_SUPPORT
C_OPTION += -DCFG_ATF_SUPPORT="$(CFG_ATF_SUPPORT)"
export CFG_ATF_SUPPORT
endif

ifdef CFG_ATF_LOG_SUPPORT
C_OPTION += -DCFG_ATF_LOG_SUPPORT="$(CFG_ATF_LOG_SUPPORT)"
export CFG_ATF_LOG_SUPPORT
endif

ifdef CFG_TEE_SUPPORT
C_OPTION += -DCFG_TEE_SUPPORT="$(CFG_TEE_SUPPORT)"
export CFG_TEE_SUPPORT
endif

ifdef CFG_RPMB_SET_KEY
C_OPTION += -DCFG_RPMB_SET_KEY="$(CFG_RPMB_SET_KEY)"
export CFG_RPMB_SET_KEY
endif

ifdef CFG_TRUSTONIC_TEE_SUPPORT
C_OPTION += -DCFG_TRUSTONIC_TEE_SUPPORT="$(CFG_TRUSTONIC_TEE_SUPPORT)"
export CFG_TRUSTONIC_TEE_SUPPORT
endif

ifdef CFG_TEE_SECURE_MEM_PROTECTED
C_OPTION += -DCFG_TEE_SECURE_MEM_PROTECTED="$(CFG_TEE_SECURE_MEM_PROTECTED)"
export CFG_TEE_SECURE_MEM_PROTECTED
endif

ifdef CFG_TEE_SECURE_MEM_TAG_FORMAT
C_OPTION += -DCFG_TEE_SECURE_MEM_TAG_FORMAT="$(CFG_TEE_SECURE_MEM_TAG_FORMAT)"
export CFG_TEE_SECURE_MEM_TAG_FORMAT
endif

ifdef CFG_GOOGLE_TRUSTY_SUPPORT
C_OPTION += -DCFG_GOOGLE_TRUSTY_SUPPORT="$(CFG_GOOGLE_TRUSTY_SUPPORT)"
export CFG_GOOGLE_TRUSTY_SUPPORT
endif

ifdef CFG_RPMB_KEY_PROGRAMED_IN_KERNEL
C_OPTION += -DCFG_RPMB_KEY_PROGRAMED_IN_KERNEL="$(CFG_RPMB_KEY_PROGRAMED_IN_KERNEL)"
export CFG_RPMB_KEY_PROGRAMED_IN_KERNEL
endif

ifdef CFG_RPMB_KEY_RETRY_IN_PL
C_OPTION += -DCFG_RPMB_KEY_RETRY_IN_PL="$(CFG_RPMB_KEY_RETRY_IN_PL)"
export CFG_RPMB_KEY_RETRY_IN_PL
endif

ifdef CFG_TEE_SECURE_MEM_SHARED
C_OPTION += -DCFG_TEE_SECURE_MEM_SHARED="$(CFG_TEE_SECURE_MEM_SHARED)"
export CFG_TEE_SECURE_MEM_SHARED
endif

ifdef CFG_NON_SECURE_SRAM_ADDR
C_OPTION += -DCFG_NON_SECURE_SRAM_ADDR="$(CFG_NON_SECURE_SRAM_ADDR)"
export CFG_NON_SECURE_SRAM_ADDR
endif

ifdef CFG_NON_SECURE_SRAM_SIZE
C_OPTION += -DCFG_NON_SECURE_SRAM_SIZE="$(CFG_NON_SECURE_SRAM_SIZE)"
export CFG_NON_SECURE_SRAM_SIZE
endif

ifdef CFG_COMMON_SDA
C_OPTION += -DCFG_COMMON_SDA="$(CFG_COMMON_SDA)"
export CFG_COMMON_SDA
endif

ifdef CFG_COMMON_RNG
C_OPTION += -DCFG_COMMON_RNG="$(CFG_COMMON_RNG)"
export CFG_COMMON_RNG
endif

ifdef CUSTOM_CONFIG_MAX_DRAM_SIZE
C_OPTION += -DCUSTOM_CONFIG_MAX_DRAM_SIZE="$(CUSTOM_CONFIG_MAX_DRAM_SIZE)"
export CUSTOM_CONFIG_MAX_DRAM_SIZE
endif

ifdef UPDATE_HIGHEST_FREQ_TO_3733
C_OPTION += -DUPDATE_HIGHEST_FREQ_TO_3733="$(UPDATE_HIGHEST_FREQ_TO_3733)"
export UPDATE_HIGHEST_FREQ_TO_3733
else
C_OPTION += -DUPDATE_HIGHEST_FREQ_TO_3733=0
export UPDATE_HIGHEST_FREQ_TO_3733
endif

ifdef FEATURE_DOWNLOAD_SCREEN
C_OPTION += -DFEATURE_DOWNLOAD_SCREEN="$(FEATURE_DOWNLOAD_SCREEN)"
export FEATURE_DOWNLOAD_SCREEN
endif

ifdef DIAG_COMPOSITE_PRELOADER
C_OPTION += -DDIAG_COMPOSITE_PRELOADER="$(DIAG_COMPOSITE_PRELOADER)"
export DIAG_COMPOSITE_PRELOADER
endif

ifdef CONFIG_MTK_USB_UNIQUE_SERIAL
C_OPTION += -DCONFIG_MTK_USB_UNIQUE_SERIAL="$(CONFIG_MTK_USB_UNIQUE_SERIAL)"
export CONFIG_MTK_USB_UNIQUE_SERIAL
endif

ifeq ($(strip "$(MTK_SECURITY_SW_SUPPORT)"),"yes")
	C_OPTION += -DMTK_SECURITY_SW_SUPPORT
endif

ifeq ($(strip "$(MTK_SECURITY_ANTI_ROLLBACK)"),"yes")
	C_OPTION += -DMTK_SECURITY_ANTI_ROLLBACK
endif

ifeq ($(strip "$(MTK_SECURITY_META_SLA_SUPPORT)"),"yes")
	C_OPTION += -DMTK_SECURITY_META_SLA_SUPPORT
endif

ifeq ($(strip "$(MTK_TRNG_CALIBRATION)"),"yes")
	C_OPTION += -DMTK_TRNG_CALIBRATION
	C_OPTION += -DBLKDEV_FORCE_USE_SRAM_FOR_UNALIGNED_ACCESS
endif

ifeq ($(strip "$(MTK_TRNG_CALIBRATION_1ST_ROUND)"),"yes")
	C_OPTION += -DMTK_TRNG_CALIBRATION_1ST_ROUND
endif

ifeq ($(strip "$(MTK_TRNG_CALIBRATION_2ND_ROUND)"),"yes")
	C_OPTION += -DMTK_TRNG_CALIBRATION_2ND_ROUND
endif

ifeq ($(strip "$(MTK_FACTORY_LOCK_SUPPORT)"),"yes")
	C_OPTION += -DMTK_FACTORY_LOCK_SUPPORT
endif

ifeq ($(strip "$(MTK_EMMC_SUPPORT)"),"yes")
    C_OPTION += -DMTK_EMMC_SUPPORT
endif

ifeq ($(strip "$(MTK_I2C_CH0_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH0_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH1_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH1_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH2_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH2_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH3_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH3_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH4_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH4_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH5_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH5_PULL_DIS
endif

ifeq ($(strip "$(MTK_I2C_CH6_PULL_DIS)"),"yes")
    C_OPTION += -DMTK_I2C_CH6_PULL_DIS
endif

ifeq ($(strip "$(MTK_SINGLE_RANK_TEST)"),"yes")
    C_OPTION += -DMTK_SINGLE_RANK_TEST
endif

ifeq ($(strip "$(MTK_KERNEL_POWER_OFF_CHARGING)"),"yes")
C_OPTION += -DMTK_KERNEL_POWER_OFF_CHARGING
endif

ifeq ($(strip "$(MTK_MT6336_SUPPORT)"),"yes")
    C_OPTION += -DMTK_MT6336_SUPPORT
endif

ifeq ($(strip "$(MTK_TIA_ENABLE_GPS_TEMP1)"),"yes")
    C_OPTION += -DMTK_TIA_ENABLE_GPS_TEMP1
endif

ifeq ($(strip "$(MTK_MT8193_SUPPORT)"),"yes")
    C_OPTION += -DMTK_MT8193_SUPPORT
endif

ifeq ($(strip "$(MTK_FAN5405_SUPPORT)"),"yes")
    C_OPTION += -DMTK_FAN5405_SUPPORT
endif

ifeq ($(strip "$(CUSTOM_SEC_AUTH_SUPPORT)"),"yes")
    C_OPTION += -DCUSTOM_SEC_AUTH_SUPPORT
endif

ifeq ($(strip "$(MTK_EMMC_SUPPORT_OTP)"),"yes")
    C_OPTION += -DMTK_EMMC_SUPPORT_OTP
endif

ifeq ($(strip "$(MTK_COMBO_NAND_SUPPORT)"),"yes")
    C_OPTION += -DMTK_COMBO_NAND_SUPPORT
endif

ifeq ($(strip "$(MTK_DISABLE_POWER_ON_OFF_VOLTAGE_LIMITATION)"),"yes")
    C_OPTION += -DMTK_DISABLE_POWER_ON_OFF_VOLTAGE_LIMITATION
endif

ifeq ($(strip "$(MTK_BQ24160_SUPPORT)"),"yes")
    C_OPTION += -DMTK_BQ24160_SUPPORT
endif

ifeq ($(strip "$(MTK_SEC_VIDEO_PATH_SUPPORT)"),"yes")
    C_OPTION += -DMTK_SEC_VIDEO_PATH_SUPPORT
endif

ifeq ($(strip "$(MTK_EFUSE_WRITER_RESERVE_CODESIZE)"),"yes")
    C_OPTION += -DMTK_EFUSE_WRITER_RESERVE_CODESIZE
ifeq ($(strip "$(MTK_EFUSE_WRITER_SUPPORT)"),"yes")
    C_OPTION += -DMTK_EFUSE_WRITER_SUPPORT
endif
ifeq ($(strip "$(MTK_EFUSE_WRITER_VFY_SUPPORT)"),"yes")
    C_OPTION += -DMTK_EFUSE_WRITER_VFY_SUPPORT
endif
endif

ifdef MTK_MT22_MODE
C_OPTION += -DMTK_MT22_MODE="\"$(MTK_MT22_MODE)\""
export MTK_MT22_MODE
endif

ifeq ($(strip "$(MTK_TINYSYS_SSPM_SUPPORT)"),"yes")
    C_OPTION += -DMTK_TINYSYS_SSPM_SUPPORT
endif

ifeq ($(strip "$(MTK_MTEST_MODE1)"),"yes")
    C_OPTION += -DMTK_MTEST_MODE1
endif

ifeq ($(strip "$(MTK_UFS_OTP_SUPPORT)"),"yes")
    C_OPTION += -DMTK_UFS_OTP_SUPPORT
endif

ifeq ($(strip "$(MTK_UFS_POWP_SUPPORT)"),"yes")
    C_OPTION += -DMTK_UFS_POWP_SUPPORT
endif

ifeq ($(strip "$(FAST_META_MODE_ALPHA)"),"yes")
    C_OPTION += -DFAST_META_MODE_ALPHA
    export FAST_META_MODE_ALPHA
endif

ifeq ($(strip "$(MTK_UNLOCK_BAT_SUPPORT)"),"yes")
    C_OPTION += -DMTK_UNLOCK_BAT_SUPPORT
endif

ifeq ($(strip "$(MTK_EXT_CHGDET_SUPPORT)"),"yes")
    C_OPTION += -DMTK_EXT_CHGDET_SUPPORT
endif

ifeq ($(strip "$(MULTI_EXT_MAIN_CHARGER)"),"yes")
    C_OPTION += -DMULTI_EXT_MAIN_CHARGER
endif

ifdef CFG_ATF_SUPPORT
C_OPTION += -DCFG_ATF_SUPPORT="$(CFG_ATF_SUPPORT)"
export CFG_ATF_SUPPORT
endif

ifdef CFG_ATF_LOG_SUPPORT
C_OPTION += -DCFG_ATF_LOG_SUPPORT="$(CFG_ATF_LOG_SUPPORT)"
export CFG_ATF_LOG_SUPPORT
endif

ifdef CFG_TEE_SUPPORT
C_OPTION += -DCFG_TEE_SUPPORT="$(CFG_TEE_SUPPORT)"
export CFG_TEE_SUPPORT
endif

ifdef CFG_RPMB_SET_KEY
C_OPTION += -DCFG_RPMB_SET_KEY="$(CFG_RPMB_SET_KEY)"
export CFG_RPMB_SET_KEY
endif

ifdef CFG_TEE_VIRTUAL_RPMB_SUPPORT
C_OPTION += -DCFG_TEE_VIRTUAL_RPMB_SUPPORT="$(CFG_TEE_VIRTUAL_RPMB_SUPPORT)"
export CFG_TEE_VIRTUAL_RPMB_SUPPORT
endif

ifdef CFG_TRUSTONIC_TEE_SUPPORT
C_OPTION += -DCFG_TRUSTONIC_TEE_SUPPORT="$(CFG_TRUSTONIC_TEE_SUPPORT)"
export CFG_TRUSTONIC_TEE_SUPPORT
endif

ifdef CFG_MICROTRUST_TEE_SUPPORT
C_OPTION += -DCFG_MICROTRUST_TEE_SUPPORT="$(CFG_MICROTRUST_TEE_SUPPORT)"
export CFG_MICROTRUST_TEE_SUPPORT
endif

ifdef CFG_RPMB_PROGRAM_KEY
C_OPTION += -DCFG_RPMB_PROGRAM_KEY="$(CFG_RPMB_PROGRAM_KEY)"
export CFG_RPMB_PROGRAM_KEY
endif

ifdef CFG_TEE_SECURE_MEM_PROTECTED
C_OPTION += -DCFG_TEE_SECURE_MEM_PROTECTED="$(CFG_TEE_SECURE_MEM_PROTECTED)"
export CFG_TEE_SECURE_MEM_PROTECTED
endif

ifdef CFG_TEE_TRUSTED_APP_HEAP_SIZE
C_OPTION += -DCFG_TEE_TRUSTED_APP_HEAP_SIZE="$(CFG_TEE_TRUSTED_APP_HEAP_SIZE)"
export CFG_TEE_TRUSTED_APP_HEAP_SIZE
endif

ifdef CFG_ATF_ROM_MEMADDR
C_OPTION += -DCFG_ATF_ROM_MEMADDR="$(CFG_ATF_ROM_MEMADDR)"
export CFG_ATF_ROM_MEMADDR
endif

ifdef CFG_NON_SECURE_SRAM_ADDR
C_OPTION += -DCFG_NON_SECURE_SRAM_ADDR="$(CFG_NON_SECURE_SRAM_ADDR)"
export CFG_NON_SECURE_SRAM_ADDR
endif

ifdef CFG_NON_SECURE_SRAM_SIZE
C_OPTION += -DCFG_NON_SECURE_SRAM_SIZE="$(CFG_NON_SECURE_SRAM_SIZE)"
export CFG_NON_SECURE_SRAM_SIZE
endif

ifdef LCM_WIDTH
C_OPTION += -DLCM_WIDTH="$(LCM_WIDTH)"
export LCM_WIDTH
endif

ifdef LCM_HEIGHT
C_OPTION += -DLCM_HEIGHT="$(LCM_HEIGHT)"
export LCM_HEIGHT
endif

ifdef CFG_BYPASS_EMI
C_OPTION += -DCFG_BYPASS_EMI="$(CFG_BYPASS_EMI)"
export CFG_BYPASS_EMI
endif

ifdef CFG_CPU_FAST_FREQ
C_OPTION += -DCFG_CPU_FAST_FREQ="$(CFG_CPU_FAST_FREQ)"
export CFG_CPU_FAST_FREQ
endif

ifdef CFG_BYPASS_LOAD_IMG_FORCE_ATF
C_OPTION += -DCFG_BYPASS_LOAD_IMG_FORCE_ATF="$(CFG_BYPASS_LOAD_IMG_FORCE_ATF)"
export CFG_BYPASS_LOAD_IMG_FORCE_ATF
endif

ifdef CFG_FUNCTION_PICACHU_SUPPORT
C_OPTION += -DCFG_FUNCTION_PICACHU_SUPPORT="$(CFG_FUNCTION_PICACHU_SUPPORT)"
export CFG_FUNCTION_PICACHU_SUPPORT
endif

ifeq ($(strip "$(MTK_FORCE_DRAM_FREQ_1866)"),"yes")
    C_OPTION += -DMTK_FORCE_DRAM_FREQ_1866
endif

ifdef CFG_DRAM_PARTITION
C_OPTION += -DCFG_DRAM_PARTITION="$(CFG_DRAM_PARTITION)"
export CFG_DRAM_PARTITION
endif

ifdef CFG_EMI_MPU_LIB
C_OPTION += -DCFG_EMI_MPU_LIB="$(CFG_EMI_MPU_LIB)"
export CFG_EMI_MPU_LIB
endif

ifdef CFG_MBLOCK_LIB
C_OPTION += -DCFG_MBLOCK_LIB="$(CFG_MBLOCK_LIB)"
export CFG_MBLOCK_LIB
endif

ifdef CFG_PLAT_DBG_INFO_LIB
C_OPTION += -DCFG_PLAT_DBG_INFO_LIB="$(CFG_PLAT_DBG_INFO_LIB)"
export CFG_PLAT_DBG_INFO_LIB
endif

ifdef CFG_BOOT_VOL
C_OPTION += -DCFG_BOOT_VOL="$(CFG_BOOT_VOL)"
export CFG_BOOT_VOL
endif

ifeq ("$(SEC_ROM_INFO_V2)","yes")
C_OPTION += -DSEC_ROM_INFO_V2
endif

ifdef CFG_UART_DYNAMIC_SWITCH
C_OPTION += -DCFG_UART_DYNAMIC_SWITCH="$(CFG_UART_DYNAMIC_SWITCH)"
export CFG_UART_DYNAMIC_SWITCH
endif

ifeq ("$(MTK_AB_OTA_UPDATER)", "yes")
C_OPTION += -DMTK_AB_OTA_UPDATER
endif

ifdef CFG_BOOT_TIME_PROFILE
C_OPTION += -DCFG_BOOT_TIME_PROFILE="$(CFG_BOOT_TIME_PROFILE)"
export CFG_BOOT_TIME_PROFILE
endif

ifdef CFG_DRDI_EVB_PHONE
C_OPTION += -DCFG_DRDI_EVB_PHONE="$(CFG_DRDI_EVB_PHONE)"
export CFG_DRDI_EVB_PHONE
endif

ifdef CFG_FAST_META_SUPPORT
C_OPTION += -DCFG_FAST_META_SUPPORT="$(CFG_FAST_META_SUPPORT)"
export CFG_FAST_META_SUPPORT
endif

ifdef CFG_FAST_META_GPIO_CHECK
C_OPTION += -DCFG_FAST_META_GPIO_CHECK="$(CFG_FAST_META_GPIO_CHECK)"
export CFG_FAST_META_GPIO_CHECK
endif

ifdef CFG_FAST_META_GPIO
C_OPTION += -DCFG_FAST_META_GPIO="$(CFG_FAST_META_GPIO)"
export CFG_FAST_META_GPIO
endif

ifdef CFG_FAST_META_GPIO_1
C_OPTION += -DCFG_FAST_META_GPIO_1="$(CFG_FAST_META_GPIO_1)"
export CFG_FAST_META_GPIO_1
endif


ifdef CFG_FAST_META_FLAG
C_OPTION += -DCFG_FAST_META_FLAG="$(CFG_FAST_META_FLAG)"
export CFG_FAST_META_FLAG
endif

ifdef CFG_LOG_LEVEL
C_OPTION += -DCFG_LOG_LEVEL="$(CFG_LOG_LEVEL)"
export CFG_LOG_LEVEL
endif

ifeq ($(strip "$(CFG_PARTITION_COMMON)"),"1")
C_OPTION += -DMTK_PARTITION_COMMON
export CFG_PARTITION_COMMON
endif

ifeq ($(strip "$(CFG_DOE_CONFIG_ENV_SUPPORT)"),"1")
C_OPTION += -DMTK_DOE_CONFIG_ENV_SUPPORT
export CFG_DOE_CONFIG_ENV_SUPPORT
endif

ifeq ($(strip "$(CFG_EARLY_PARTITION_ACCESS)"), "1")
C_OPTION += -DBLKDEV_FORCE_USE_SRAM_FOR_UNALIGNED_ACCESS
C_OPTION += -DEARLY_PARTITION_ACCESS
else
ifeq ($(strip "$(MTK_EFUSE_WRITER_SUPPORT)"),"yes")
C_OPTION += -DBLKDEV_FORCE_USE_SRAM_FOR_UNALIGNED_ACCESS
endif # MTK_EFUSE_WRITER_SUPPORT
endif # CFG_EARLY_PARTITION_ACCESS

ifdef CFG_GZ_SUPPORT
C_OPTION += -DCFG_GZ_SUPPORT="$(CFG_GZ_SUPPORT)"
C_OPTION += -DCFG_GZ_NEED_DESCRAMBLE="$(CFG_GZ_NEED_DESCRAMBLE)"
export CFG_GZ_SUPPORT
endif

ifdef CFG_GZ_ENABLE_BOOT
C_OPTION += -DCFG_GZ_ENABLE_BOOT="$(CFG_GZ_ENABLE_BOOT)"
export CFG_GZ_ENABLE_BOOT
endif

ifdef CFG_KEEP_BOOTING_ON_GZ_NOT_EXIST
C_OPTION += -DCFG_KEEP_BOOTING_ON_GZ_NOT_EXIST="$(CFG_KEEP_BOOTING_ON_GZ_NOT_EXIST)"
export CFG_KEEP_BOOTING_ON_GZ_NOT_EXIST
endif

ifdef CFG_GZ_DISABLE_MD_SHARED
C_OPTION += -DCFG_GZ_DISABLE_MD_SHARED="$(CFG_GZ_DISABLE_MD_SHARED)"
export CFG_GZ_DISABLE_MD_SHARED
endif

ifdef CFG_GZ_REMAP
C_OPTION += -DCFG_GZ_REMAP="$(CFG_GZ_REMAP)"
export CFG_GZ_REMAP
endif

ifdef CFG_NEBULA_VM_SUPPORT
C_OPTION += -DCFG_NEBULA_VM_SUPPORT="$(CFG_NEBULA_VM_SUPPORT)"
export CFG_NEBULA_VM_SUPPORT
endif

ifdef CFG_NEBULA_LOAD_IN_PART2
C_OPTION += -DCFG_NEBULA_LOAD_IN_PART2="$(CFG_NEBULA_LOAD_IN_PART2)"
export CFG_NEBULA_LOAD_IN_PART2
endif

ifdef CFG_GZ_PWRAP_ENABLE
C_OPTION += -DCFG_GZ_PWRAP_ENABLE="$(CFG_GZ_PWRAP_ENABLE)"
export CFG_GZ_PWRAP_ENABLE
endif

ifdef CFG_RKP_SUPPORT
C_OPTION += -DCFG_RKP_SUPPORT="$(CFG_RKP_SUPPORT)"
export CFG_RKP_SUPPORT
C_OPTION += -DCFG_GZ_SUPPORT_UNMAP2="$(CFG_GZ_SUPPORT_UNMAP2)"
export CFG_GZ_SUPPORT_UNMAP2

ifdef CUSTOM_GZ_RKP_ENTRY
C_OPTION += -DCFG_RKP_ENTRY="$(CUSTOM_GZ_RKP_ENTRY)"
CFG_RKP_ENTRY:=$(CUSTOM_GZ_RKP_ENTRY)
export CFG_RKP_ENTRY
endif

ifdef CUSTOM_GZ_RKP_ENTRY_VA
C_OPTION += -DCFG_RKP_ENTRY_VA="$(CUSTOM_GZ_RKP_ENTRY_VA)"
CFG_RKP_ENTRY_VA:=$(CUSTOM_GZ_RKP_ENTRY_VA)
export CFG_RKP_ENTRY_VA
endif

ifdef CUSTOM_GZ_RKP_TEXT_SIZE
C_OPTION += -DCFG_RKP_TEXT_SIZE="$(CUSTOM_GZ_RKP_TEXT_SIZE)"
CFG_RKP_TEXT_SIZE:=$(CUSTOM_GZ_RKP_TEXT_SIZE)
export CFG_RKP_TEXT_SIZE
endif
endif

ifdef CFG_GZ_SECURE_DSP
C_OPTION += -DCFG_GZ_SECURE_DSP="$(CFG_GZ_SECURE_DSP)"
export CFG_GZ_SECURE_DSP
endif

ifdef CFG_GZ_SAPU_MTEE_SHM
C_OPTION += -DCFG_GZ_SAPU_MTEE_SHM="$(CFG_GZ_SAPU_MTEE_SHM)"
export CFG_GZ_SAPU_MTEE_SHM
endif

ifdef CFG_GZ_TEE_STATIC_SHM
C_OPTION += -DCFG_GZ_TEE_STATIC_SHM="$(CFG_GZ_TEE_STATIC_SHM)"
export CFG_GZ_TEE_STATIC_SHM
endif

ifeq ($(strip "$(MTK_QEA_VCORE_SUPPORT)"),"yes")
C_OPTION += -DMTK_QEA_VCORE_SUPPORT
export MTK_QEA_VCORE_SUPPORT
endif

ifeq ($(strip "$(MTK_TINYSYS_MCUPM_SUPPORT)"),"yes")
    C_OPTION += -DMTK_TINYSYS_MCUPM_SUPPORT
endif

ifdef CFG_LOAD_SLT_MCUPM
C_OPTION += -DCFG_LOAD_SLT_MCUPM="$(CFG_LOAD_SLT_MCUPM)"
export CFG_LOAD_SLT_MCUPM
endif

ifdef CFG_MCUPM_MEMADDR
C_OPTION += -DCFG_MCUPM_MEMADDR="$(CFG_MCUPM_MEMADDR)"
export CFG_MCUPM_MEMADDR
endif

ifeq ($(strip "$(MTK_AGING_FLAVOR_LOAD)"),"yes")
C_OPTION += -DMTK_AGING_FLAVOR_LOAD
endif

ifeq ($(strip "$(MTK_LV_AGING_FLAVOR_LOAD)"),"yes")
C_OPTION += -DMTK_LV_AGING_FLAVOR_LOAD
endif

ifdef CFG_AEE_SUPPORT
C_OPTION += -DCFG_AEE_SUPPORT="$(CFG_AEE_SUPPORT)"
export CFG_AEE_SUPPORT
endif

ifdef MTK_AEE_LEVEL
C_OPTION += -DMTK_AEE_LEVEL="$(MTK_AEE_LEVEL)"
export MTK_AEE_LEVEL
endif

ifdef CFG_AEE_LK_MEMADDR
C_OPTION += -DCFG_AEE_LK_MEMADDR="$(CFG_AEE_LK_MEMADDR)"
export CFG_AEE_LK_MEMADDR
endif

ifdef CFG_AEE_LK_MEMSIZE
C_OPTION += -DCFG_AEE_LK_MEMSIZE="$(CFG_AEE_LK_MEMSIZE)"
export CFG_AEE_LK_MEMSIZE
endif

ifeq ($(strip "$(MTK_VB_FLAVOR_LOAD)"),"yes")
C_OPTION += -DMTK_VCORE_CT_TEST_SUPPORT
endif

ifeq ($(strip "$(MTK_VCORE_VB_SUPPORT)"),"yes")
C_OPTION += -DMTK_VCORE_VB_ENABLE
endif

ifeq ($(strip "$(MTK_VB_OPP0_V2)"),"yes")
C_OPTION += -DMTK_VCORE_VB_OPP0_V2
endif

ifdef CFG_ARMPLL_BOOST
C_OPTION += -DCFG_ARMPLL_BOOST="$(CFG_ARMPLL_BOOST)"
export CFG_ARMPLL_BOOST
endif

ifdef CFG_GZ_SECCAM_SUPPORT
C_OPTION += -DCFG_GZ_SECCAM_SUPPORT="$(CFG_GZ_SECCAM_SUPPORT)"
export CFG_GZ_SECCAM_SUPPORT
endif

ifeq ("$(strip $(MTK_SLT_SHOW_SEGMENT))","yes")
C_OPTION += -DMTK_SLT_SHOW_SEGMENT="$(strip $(MTK_SLT_SHOW_SEGMENT))"
export MTK_SLT_SHOW_SEGMENT
endif

ifeq ($(strip "$(CFG_AARCH64_BUILD)"),"1")
C_OPTION += -DCFG_AARCH64_BUILD="$(CFG_AARCH64_BUILD)"
export CFG_AARCH64_BUILD
endif

ifdef CFG_AOC_HRE
C_OPTION += -DCFG_AOC_HRE="$(CFG_AOC_HRE)"
export CFG_AOC_HRE
endif

ifeq ("$(MT6375_BATTERY)","yes")
    C_OPTION += -DMT6375_BATTERY
endif

ifeq ("$(MT6375_AUXADC)","yes")
    C_OPTION += -DMT6375_AUXADC
endif

ifdef CFG_EMI_ADDR2DRAM_VER
export CFG_EMI_ADDR2DRAM_VER
endif

ifeq ("$(MTK_SVP_ON_MTEE_SUPPORT)","yes")
C_OPTION += -DMTK_SVP_ON_MTEE_SUPPORT="$(MTK_SVP_ON_MTEE_SUPPORT)"
export MTK_SVP_ON_MTEE_SUPPORT
endif

ifeq ("$(MKP_SERVICE_SUPPORT)","yes")
C_OPTION += -DMKP_SERVICE_SUPPORT="$(MKP_SERVICE_SUPPORT)"
export MKP_SERVICE_SUPPORT

ifdef MKP_SERVICE_MAX_SIZE
C_OPTION += -DMKP_SERVICE_MAX_SIZE="$(MKP_SERVICE_MAX_SIZE)"
export MKP_SERVICE_MAX_SIZE
endif
endif

ifeq ($(strip "$(MTK_ENABLE_EMI_EBG)"),"yes")
C_OPTION += -DMTK_ENABLE_EMI_EBG
endif
