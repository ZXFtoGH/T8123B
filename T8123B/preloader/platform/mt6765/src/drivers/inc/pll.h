/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein is
 * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
 * the prior written permission of MediaTek inc. and/or its licensors, any
 * reproduction, modification, use or disclosure of MediaTek Software, and
 * information contained herein, in whole or in part, shall be strictly
 * prohibited.
 * 
 * MediaTek Inc. (C) 2010. All rights reserved.
 * 
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
 * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
 * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
 * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
 * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
 * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
 * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
 * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
 * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
 * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
 * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
 * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
 * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
 * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek
 * Software") have been modified by MediaTek Inc. All revisions are subject to
 * any receiver's applicable license agreements with MediaTek Inc.
 */

#ifndef PLL_H
//#include "custom_emi.h"
#define PLL_H

#define CK_BASE                       (0x10000000)  
#define APMIXED_BASE            (0x1000C000)
#define AUDIO_BASE             (0x11220000)
#define MFGCFG_BASE            (0x13000000)
#define MMSYS_CONFIG_BASE      (0x14000000)
#define IMGSYS_BASE            (0x15020000)
#define VENC_GCON_BASE         (0x17000000)
#define CAMSYS_BASE            (0x1A000000)
#define GCE_BASE                       (0x10238000)


/* MCUCFG Register */
#define MP0_PLL_DIV_CFG          (MCUSYS_CFGREG_BASE + 0x7A0) //ARMPLL_LL
#define MP1_PLL_DIV_CFG          (MCUSYS_CFGREG_BASE + 0x7A4) //ARMPLL_L
#define BUS_PLL_DIV_CFG          (MCUSYS_CFGREG_BASE + 0x7C0) //CCIPLL

/* APMIXEDSYS Register */
#define AP_PLL_CON0		(APMIXED_BASE + 0x00)
#define AP_PLL_CON1		(APMIXED_BASE + 0x04)
#define AP_PLL_CON2		(APMIXED_BASE + 0x08)
#define AP_PLL_CON3		(APMIXED_BASE + 0x0C)
#define AP_PLL_CON4		(APMIXED_BASE + 0x10)
#define AP_PLL_CON5		(APMIXED_BASE + 0x14)
#define CLKSQ_STB_CON0		(APMIXED_BASE + 0x18)
#define PLL_PWR_CON0		(APMIXED_BASE + 0x1C)
#define PLL_PWR_CON1		(APMIXED_BASE + 0x20)
#define PLL_ISO_CON0		(APMIXED_BASE + 0x24)
#define PLL_ISO_CON1		(APMIXED_BASE + 0x28)
#define PLL_STB_CON0		(APMIXED_BASE + 0x2C)
#define DIV_STB_CON0		(APMIXED_BASE + 0x30)
#define PLL_CHG_CON0		(APMIXED_BASE + 0x34)
#define PLL_TEST_CON0		(APMIXED_BASE + 0x38)
#define PLL_TEST_CON1		(APMIXED_BASE + 0x3C)
#define APLL1_TUNER_CON0		(APMIXED_BASE + 0x40)
#define PLLON_CON0		(APMIXED_BASE + 0x44)
#define PLLON_CON1		(APMIXED_BASE + 0x48)

#define AP_PLLGP_CON0		(APMIXED_BASE + 0x200)
#define AP_PLLGP_CON1		(APMIXED_BASE + 0x204)
#define AP_PLLGP_CON2		(APMIXED_BASE + 0x208)

#define ARMPLL_CON0		(APMIXED_BASE + 0x20C)
#define ARMPLL_CON1		(APMIXED_BASE + 0x210)
#define ARMPLL_CON2		(APMIXED_BASE + 0x214)
#define ARMPLL_CON3		(APMIXED_BASE + 0x218)

#define ARMPLL_L_CON0		(APMIXED_BASE + 0x21C)
#define ARMPLL_L_CON1		(APMIXED_BASE + 0x220)
#define ARMPLL_L_CON2		(APMIXED_BASE + 0x224)
#define ARMPLL_L_CON3		(APMIXED_BASE + 0x228)

#define CCIPLL_CON0		(APMIXED_BASE + 0x22C)
#define CCIPLL_CON1		(APMIXED_BASE + 0x230)
#define CCIPLL_CON2		(APMIXED_BASE + 0x234)
#define CCIPLL_CON3		(APMIXED_BASE + 0x238)

#define MAINPLL_CON0		(APMIXED_BASE + 0x23C)
#define MAINPLL_CON1		(APMIXED_BASE + 0x240)
#define MAINPLL_CON2		(APMIXED_BASE + 0x244)
#define MAINPLL_CON3		(APMIXED_BASE + 0x248)
                                                
#define MFGPLL_CON0		(APMIXED_BASE + 0x24C)
#define MFGPLL_CON1		(APMIXED_BASE + 0x250)
#define MFGPLL_CON2		(APMIXED_BASE + 0x254)
#define MFGPLL_CON3		(APMIXED_BASE + 0x258)

#define MMPLL_CON0		(APMIXED_BASE + 0x25C)
#define MMPLL_CON1		(APMIXED_BASE + 0x260)
#define MMPLL_CON2		(APMIXED_BASE + 0x264)
#define MMPLL_CON3		(APMIXED_BASE + 0x268)

#define UNIVPLL_CON0		(APMIXED_BASE + 0x26C)
#define UNIVPLL_CON1		(APMIXED_BASE + 0x270)
#define UNIVPLL_CON2		(APMIXED_BASE + 0x274)
#define UNIVPLL_CON3		(APMIXED_BASE + 0x278)

#define MSDCPLL_CON0		(APMIXED_BASE + 0x27C)
#define MSDCPLL_CON1		(APMIXED_BASE + 0x280)
#define MSDCPLL_CON2		(APMIXED_BASE + 0x284)
#define MSDCPLL_CON3		(APMIXED_BASE + 0x288)
                                                
#define APLL1_CON0		(APMIXED_BASE + 0x28C)
#define APLL1_CON1		(APMIXED_BASE + 0x290)
#define APLL1_CON2		(APMIXED_BASE + 0x294)
#define APLL1_CON3		(APMIXED_BASE + 0x298)
#define APLL1_CON4		(APMIXED_BASE + 0x29C)

#define MPLL_CON0			(APMIXED_BASE + 0x2A0)
#define MPLL_CON1			(APMIXED_BASE + 0x2A4)
#define MPLL_CON2			(APMIXED_BASE + 0x2A8)
#define MPLL_CON3			(APMIXED_BASE + 0x2AC)

/* MCUCFG Register */

/* TOPCKGEN Register */
#define CLK_MODE			(CK_BASE + 0x000)
#define CLK_CFG_UPDATE		(CK_BASE + 0x004)
#define CLK_CFG_0			(CK_BASE + 0x040)
#define CLK_CFG_0_SET		(CK_BASE + 0x044)
#define CLK_CFG_0_CLR		(CK_BASE + 0x048)
#define CLK_CFG_1			(CK_BASE + 0x050)
#define CLK_CFG_1_SET		(CK_BASE + 0x054)
#define CLK_CFG_1_CLR		(CK_BASE + 0x058)
#define CLK_CFG_2			(CK_BASE + 0x060)
#define CLK_CFG_2_SET		(CK_BASE + 0x064)
#define CLK_CFG_2_CLR		(CK_BASE + 0x068)
#define CLK_CFG_3			(CK_BASE + 0x070)
#define CLK_CFG_3_SET		(CK_BASE + 0x074)
#define CLK_CFG_3_CLR		(CK_BASE + 0x078)
#define CLK_CFG_4			(CK_BASE + 0x080)
#define CLK_CFG_4_SET		(CK_BASE + 0x084)
#define CLK_CFG_4_CLR		(CK_BASE + 0x088)
#define CLK_CFG_5			(CK_BASE + 0x090)
#define CLK_CFG_5_SET		(CK_BASE + 0x094)
#define CLK_CFG_5_CLR		(CK_BASE + 0x098)
#define CLK_CFG_6			(CK_BASE + 0x0A0)
#define CLK_CFG_6_SET		(CK_BASE + 0x0A4)
#define CLK_CFG_6_CLR		(CK_BASE + 0x0A8)
#define CLK_CFG_7			(CK_BASE + 0x0B0)
#define CLK_CFG_7_SET		(CK_BASE + 0x0B4)
#define CLK_CFG_7_CLR		(CK_BASE + 0x0B8)
#define CLK_CFG_8			(CK_BASE + 0x0C0)
#define CLK_CFG_8_SET		(CK_BASE + 0x0C4)
#define CLK_CFG_8_CLR		(CK_BASE + 0x0C8)
#define CLK_CFG_9			(CK_BASE + 0x0D0)
#define CLK_CFG_9_SET		(CK_BASE + 0x0D4)
#define CLK_CFG_9_CLR		(CK_BASE + 0x0D8)
#define CLK_CFG_10		(CK_BASE + 0x0E0)
#define CLK_CFG_10_SET		(CK_BASE + 0x0E4)
#define CLK_CFG_10_CLR		(CK_BASE + 0x0E8)

#define CLK_MISC_CFG_0		(CK_BASE + 0x104)
#define CLK_MISC_CFG_1		(CK_BASE + 0x108)
#define CLK_DBG_CFG		(CK_BASE + 0x10C)
#define CLK_SCP_CFG_0		(CK_BASE + 0x200)
#define CLK_SCP_CFG_1		(CK_BASE + 0x204)
#define CLK26CALI_0		(CK_BASE + 0x220)
#define CLK26CALI_1		(CK_BASE + 0x224)
#define CKSTA_REG		(CK_BASE + 0x230)
#define CLKMON_CLK_SEL_REG	(CK_BASE + 0x300)
#define CLKMON_K1_REG		(CK_BASE + 0x304)
#define CLK_AUDDIV_0		(CK_BASE + 0x320)
#define CLK_AUDDIV_1		(CK_BASE + 0x324)
#define CLK_AUDDIV_2		(CK_BASE + 0x328)
#define AUD_TOP_CFG		(CK_BASE + 0x32C)
#define AUD_TOP_MON		(CK_BASE + 0x330)
#define CLK_PDN_REG		(CK_BASE + 0x400)
#define CLK_EXTCK_REG		(CK_BASE + 0x500)

/* INFRASYS Register */
#define INFRA_GLOBALCON_DCMCTL			(INFRACFG_AO_BASE + 0x50)
#define INFRA_BUS_DCM_CTRL			(INFRACFG_AO_BASE + 0x70)
#define PERI_BUS_DCM_CTRL			(INFRACFG_AO_BASE + 0x74)
#define MODULE_SW_CG_0_SET			(INFRACFG_AO_BASE + 0x80)
#define MODULE_SW_CG_0_CLR			(INFRACFG_AO_BASE + 0x84)
#define MODULE_SW_CG_1_SET			(INFRACFG_AO_BASE + 0x88)
#define MODULE_SW_CG_1_CLR			(INFRACFG_AO_BASE + 0x8C)
#define MODULE_SW_CG_0_STA			(INFRACFG_AO_BASE + 0x90)
#define MODULE_SW_CG_1_STA			(INFRACFG_AO_BASE + 0x94)
#define MODULE_CLK_SEL				(INFRACFG_AO_BASE + 0x98)
#define MODULE_SW_CG_2_SET			(INFRACFG_AO_BASE + 0xA4)
#define MODULE_SW_CG_2_CLR			(INFRACFG_AO_BASE + 0xA8)
#define MODULE_SW_CG_2_STA			(INFRACFG_AO_BASE + 0xAC)
#define MODULE_SW_CG_3_SET			(INFRACFG_AO_BASE + 0xC0)
#define MODULE_SW_CG_3_CLR			(INFRACFG_AO_BASE + 0xC4)
#define MODULE_SW_CG_3_STA			(INFRACFG_AO_BASE + 0xC8)
#define INFRA_TOPAXI_SI0_CTL			(INFRACFG_AO_BASE + 0x0200)
#define INFRA_TOPAXI_PROTECTEN			(INFRACFG_AO_BASE + 0x0220)
#define INFRA_TOPAXI_PROTECTEN_STA1		(INFRACFG_AO_BASE + 0x0228)
#define INFRA_TOPAXI_PROTECTEN_1		(INFRACFG_AO_BASE + 0x0250)
#define INFRA_TOPAXI_PROTECTEN_STA1_1		(INFRACFG_AO_BASE + 0x0258)
#define INFRA_TOPAXI_PROTECTEN_SET		(INFRACFG_AO_BASE + 0x02A0)
#define INFRA_TOPAXI_PROTECTEN_CLR		(INFRACFG_AO_BASE + 0x02A4)
#define INFRA_TOPAXI_PROTECTEN_1_SET		(INFRACFG_AO_BASE + 0x02A8)
#define INFRA_TOPAXI_PROTECTEN_1_CLR		(INFRACFG_AO_BASE + 0x02AC)
#define INFRA_PLL_ULPOSC_CON0			(INFRACFG_AO_BASE + 0x0B00)
#define INFRA_PLL_ULPOSC_CON1			(INFRACFG_AO_BASE + 0x0B04)

/* Pericfg Register*/
#define PERIAXI_SI0_CTL				(PERICFG_BASE+0x208)

/* Audio Register*/
#define AUDIO_TOP_CON0			(AUDIO_BASE + 0x0000)
#define AUDIO_TOP_CON1			(AUDIO_BASE + 0x0004)

/* MFGCFG Register*/            
#define MFG_CG_CON			(MFGCFG_BASE + 0x000)
#define MFG_CG_SET			(MFGCFG_BASE + 0x004)
#define MFG_CG_CLR			(MFGCFG_BASE + 0x008)

/* MMSYS Register*/
#define MMSYS_CG_CON0			((UINT32P)(MMSYS_CONFIG_BASE+0x100))
#define MMSYS_CG_SET0			((UINT32P)(MMSYS_CONFIG_BASE+0x104))
#define MMSYS_CG_CLR0			((UINT32P)(MMSYS_CONFIG_BASE+0x108))
#define MMSYS_CG_CON1			((UINT32P)(MMSYS_CONFIG_BASE+0x110))
#define MMSYS_CG_SET1			((UINT32P)(MMSYS_CONFIG_BASE+0x114))
#define MMSYS_CG_CLR1			((UINT32P)(MMSYS_CONFIG_BASE+0x118))

/* IMGSYS Register */
#define IMG_CG_CON			(IMGSYS_BASE + 0x0000)
#define IMG_CG_SET			(IMGSYS_BASE + 0x0004)
#define IMG_CG_CLR			(IMGSYS_BASE + 0x0008)

/* VENC Register*/
#define VENC_CG_CON			(VENC_GCON_BASE + 0x0)
#define VENC_CG_SET			(VENC_GCON_BASE + 0x4)
#define VENC_CG_CLR			(VENC_GCON_BASE + 0x8)


#endif
