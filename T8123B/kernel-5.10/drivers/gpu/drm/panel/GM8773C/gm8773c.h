// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (c) 2022 Rockchip Electronics Co. Ltd.
 *
 * GM8773C mipi 1 in 2 out driver.
 *
 * Author: Kenneth.Hung@ite.com.tw
 * 	   Wangqiang Guo <kay.guo@rock-chips.com>
 * Version: GM8773C_SAMPLE_1.08
 *
 */
#ifndef _GM8773C_H_
#define _GM8773C_H_

#define LP_CMD_FIFO_SIZE 2560

struct gm8773c_dev { 
	 dev_t devid;
	 struct cdev cdev;
	 struct class *class;
	 struct device *device;
	 struct device_node *nd;
	 int major;
	 void *private_data;
};

struct gm8773c_dev gm8773c_dev;

enum display_mode{
	tx0_equals_tx1=0x00,
	Parity_mode=0x40,
	left_and_right_mode=0xc0,
};

enum mipi_mode{
	SYNC_PULSE=0x30,
	SYNC_EVENT=0xb0
};

enum gm8773c_bist_color{
	GREEN=1,
	BLUE,
	RED,
};

struct gm8773c {
	unsigned int tx0_hactive;
	unsigned int tx1_hactive;
	unsigned int hfront_porch;
	unsigned int hsync_width;
	unsigned int hback_porch;
	unsigned int tx0_htotal;
	unsigned int tx0_vactive;
	unsigned int tx1_vactive;
	unsigned int vfront_porch;
	unsigned int vsync_width;
	unsigned int vback_porch;
	unsigned int tx0_vtotal;
	unsigned int mipi_rx_clk; 		 //输入mipi时钟
	unsigned int select_refclk;		 //选择参考时钟
	unsigned int refclk_div;
	unsigned int refclk_int;
	unsigned int refclk_postdiv;
	unsigned int display_mode;
	unsigned int eotp;
	unsigned int mipi_tx_clk;
	unsigned int Rx_Lane_num;
	unsigned int Tx_Lane_num;
	unsigned int Rx_DateLane_PN_Change;
	unsigned int Rx_ClkLane_PN_Change;
	unsigned int Tx0_ClkLane_PN_Change;
	unsigned int Tx1_ClkLane_PN_Change;
	unsigned int Tx0_DataLane_PN_Change;
	unsigned int Tx1_DataLane_PN_Change;
	unsigned int gm8773c_tx_mode;
	unsigned int device_addr;
	u8 mipi_tx_lpx_num;
};
struct gm8773c gm8773c_basic_cfg;
enum dcs_cmd_name {
    ENTER_SLEEP_MODE,
    SET_DISPLAY_OFF,
    EXIT_SLEEP_MODE,
    SET_DISPLAY_ON,
	SET_DSI_TE,
	SET_MAX_RETURN_SIZE,
    GET_DISPLAY_MODE_DA,
	GET_DISPLAY_MODE_DB,
	GET_DISPLAY_MODE_DC,
	GET_DISPLAY_MODE_0A,//add by kzh for esd check func
	LONG_WRITE_CMD, 
	LONG_WRITE_CMD1,	
	LONG_WRITE_CMD2,	
	LONG_WRITE_CMD3,	
	LONG_WRITE_CMD4,	
	LONG_WRITE_CMD5,	
	LONG_WRITE_CMD6,	
	LONG_WRITE_CMD7,	
	LONG_WRITE_CMD8,	
	LONG_WRITE_CMD9,	
	LONG_WRITE_CMD10,	
	LONG_WRITE_CMD11,	
	LONG_WRITE_CMD12,	
	LONG_WRITE_CMD13,	
	LONG_WRITE_CMD14,	
	LONG_WRITE_CMD15,	
	LONG_WRITE_CMD16,	
	LONG_WRITE_CMD17,	
	LONG_WRITE_CMD18,	
	LONG_WRITE_CMD19,	
	LONG_WRITE_CMD20,	
	LONG_WRITE_CMD21,	
	LONG_WRITE_CMD22,	
	LONG_WRITE_CMD23,	
	LONG_WRITE_CMD24,	
	LONG_WRITE_CMD25,	
	LONG_WRITE_CMD26,	
	LONG_WRITE_CMD27,	
	LONG_WRITE_CMD28,	
	LONG_WRITE_CMD29,	
	LONG_WRITE_CMD30,	
	LONG_WRITE_CMD31,	
	LONG_WRITE_CMD32,	
	LONG_WRITE_CMD33,	
	LONG_WRITE_CMD34,	
	LONG_WRITE_CMD35,	
	LONG_WRITE_CMD36,	
	LONG_WRITE_CMD37,	
	LONG_WRITE_CMD38,	
	LONG_WRITE_CMD39,	
	LONG_WRITE_CMD40,	
	LONG_WRITE_CMD41,	
	LONG_WRITE_CMD42,	
	LONG_WRITE_CMD43,	
	LONG_WRITE_CMD44,	
	LONG_WRITE_CMD45,	
	LONG_WRITE_CMD46,	
	LONG_WRITE_CMD47,	
	LONG_WRITE_CMD48,	
	LONG_WRITE_CMD49,	
	LONG_WRITE_CMD50,	
	LONG_WRITE_CMD51,	
	LONG_WRITE_CMD52,	
	LONG_WRITE_CMD53,	
	LONG_WRITE_CMD54,	
	LONG_WRITE_CMD55,	
	LONG_WRITE_CMD56,	
	LONG_WRITE_CMD57,	
	LONG_WRITE_CMD58,	
	LONG_WRITE_CMD59,	
	LONG_WRITE_CMD60,	
	LONG_WRITE_CMD61,	
	LONG_WRITE_CMD62,	
	LONG_WRITE_CMD63,	
	LONG_WRITE_CMD64,	
	LONG_WRITE_CMD65,	
	LONG_WRITE_CMD66,	
	LONG_WRITE_CMD67,	
	LONG_WRITE_CMD68,	
	LONG_WRITE_CMD69,	
	LONG_WRITE_CMD70,	
	LONG_WRITE_CMD71,	
	LONG_WRITE_CMD72,	
	LONG_WRITE_CMD73,	
	LONG_WRITE_CMD74,	
	LONG_WRITE_CMD75,	
	LONG_WRITE_CMD76,	
	LONG_WRITE_CMD77,	
	LONG_WRITE_CMD78,	
	LONG_WRITE_CMD79,	
	LONG_WRITE_CMD80,	
	LONG_WRITE_CMD81,	
	LONG_WRITE_CMD82,	
	LONG_WRITE_CMD83,	
	LONG_WRITE_CMD84,	
	LONG_WRITE_CMD85,	
	LONG_WRITE_CMD86,	
	LONG_WRITE_CMD87,	
	LONG_WRITE_CMD88,	
	LONG_WRITE_CMD89,	
	LONG_WRITE_CMD90,	
	LONG_WRITE_CMD91,	
	LONG_WRITE_CMD92,	
	LONG_WRITE_CMD93,	
	LONG_WRITE_CMD94,	
	LONG_WRITE_CMD95,	
	LONG_WRITE_CMD96,	
	LONG_WRITE_CMD97,	
	LONG_WRITE_CMD98,	
	LONG_WRITE_CMD99,	
	LONG_WRITE_CMD100,
	LONG_WRITE_CMD101,
	LONG_WRITE_CMD102,
	LONG_WRITE_CMD103,
	LONG_WRITE_CMD104,
	LONG_WRITE_CMD105,
	LONG_WRITE_CMD106,
	LONG_WRITE_CMD107,
	LONG_WRITE_CMD108,
	LONG_WRITE_CMD109,
	LONG_WRITE_CMD110,
	LONG_WRITE_CMD111,
	LONG_WRITE_CMD112,
	LONG_WRITE_CMD113,
	LONG_WRITE_CMD114,
	LONG_WRITE_CMD115,
	LONG_WRITE_CMD116,
	LONG_WRITE_CMD117,
	LONG_WRITE_CMD118,
	LONG_WRITE_CMD119,
	LONG_WRITE_CMD120,
	LONG_WRITE_CMD121,
	LONG_WRITE_CMD122,
	LONG_WRITE_CMD123,
	LONG_WRITE_CMD124,
	LONG_WRITE_CMD125,
	LONG_WRITE_CMD126,
	LONG_WRITE_CMD127,
	LONG_WRITE_CMD128,
	LONG_WRITE_CMD129,
	LONG_WRITE_CMD130,
	LONG_WRITE_CMD131,
	LONG_WRITE_CMD132,
	LONG_WRITE_CMD133,
	LONG_WRITE_CMD134,
	LONG_WRITE_CMD135,
	LONG_WRITE_CMD136,
	LONG_WRITE_CMD137,
	LONG_WRITE_CMD138,
	LONG_WRITE_CMD139,
	LONG_WRITE_CMD140,
	LONG_WRITE_CMD141,
	LONG_WRITE_CMD142,
	LONG_WRITE_CMD143,
	LONG_WRITE_CMD144,
	LONG_WRITE_CMD145,
	LONG_WRITE_CMD146,
	LONG_WRITE_CMD147,
	LONG_WRITE_CMD148,
	LONG_WRITE_CMD149,
	LONG_WRITE_CMD150,
	LONG_WRITE_CMD151,
	LONG_WRITE_CMD152,
	LONG_WRITE_CMD153,
	LONG_WRITE_CMD154,
	LONG_WRITE_CMD155,
	LONG_WRITE_CMD156,
	LONG_WRITE_CMD157,
	LONG_WRITE_CMD158,
	LONG_WRITE_CMD159,
	LONG_WRITE_CMD160,
	LONG_WRITE_CMD161,
	LONG_WRITE_CMD162,
	LONG_WRITE_CMD163,
	LONG_WRITE_CMD164,
	LONG_WRITE_CMD165,
	LONG_WRITE_CMD166,
	LONG_WRITE_CMD167,
	LONG_WRITE_CMD168,
	LONG_WRITE_CMD169,
	LONG_WRITE_CMD170,
	LONG_WRITE_CMD171,
	LONG_WRITE_CMD172,
	LONG_WRITE_CMD173,
	LONG_WRITE_CMD174,
	LONG_WRITE_CMD175,
	LONG_WRITE_CMD176,
	LONG_WRITE_CMD177,
	LONG_WRITE_CMD178,
	LONG_WRITE_CMD179,
	LONG_WRITE_CMD180,
	LONG_WRITE_CMD181,
	LONG_WRITE_CMD182,
	LONG_WRITE_CMD183,
	LONG_WRITE_CMD184,
	LONG_WRITE_CMD185,
	LONG_WRITE_CMD186,
	LONG_WRITE_CMD187,
	LONG_WRITE_CMD188,
	LONG_WRITE_CMD189,
	LONG_WRITE_CMD190,
	LONG_WRITE_CMD191,
	LONG_WRITE_CMD192,
	LONG_WRITE_CMD193,
	LONG_WRITE_CMD194,
	LONG_WRITE_CMD195,
	LONG_WRITE_CMD196,
	LONG_WRITE_CMD197,
	LONG_WRITE_CMD198,
	LONG_WRITE_CMD199,
	LONG_WRITE_CMD200,
	LONG_WRITE_CMD201,
	LONG_WRITE_CMD202,
	LONG_WRITE_CMD203,
	LONG_WRITE_CMD204,
	LONG_WRITE_CMD205,
	LONG_WRITE_CMD206,
	LONG_WRITE_CMD207,
	LONG_WRITE_CMD208,
	LONG_WRITE_CMD209,
	LONG_WRITE_CMD210,
	LONG_WRITE_CMD211,
	LONG_WRITE_CMD212,
	LONG_WRITE_CMD213,
	LONG_WRITE_CMD214,
	LONG_WRITE_CMD215,
	LONG_WRITE_CMD216,
	LONG_WRITE_CMD217,
	LONG_WRITE_CMD218,
	LONG_WRITE_CMD219,
	LONG_WRITE_CMD220,
	LONG_WRITE_CMD221,
	LONG_WRITE_CMD222,
	LONG_WRITE_CMD223,
	LONG_WRITE_CMD224,
	LONG_WRITE_CMD225,
	LONG_WRITE_CMD226,
	LONG_WRITE_CMD227,
	LONG_WRITE_CMD228,
	LONG_WRITE_CMD229,
	LONG_WRITE_CMD230,
	LONG_WRITE_CMD231,
	LONG_WRITE_CMD232,
	LONG_WRITE_CMD233,
	LONG_WRITE_CMD234,
	LONG_WRITE_CMD235,
	LONG_WRITE_CMD236,
	LONG_WRITE_CMD237,
	LONG_WRITE_CMD238,
	LONG_WRITE_CMD239,
	LONG_WRITE_CMD240,
	LONG_WRITE_CMD241,
	LONG_WRITE_CMD242,
	LONG_WRITE_CMD243,
	LONG_WRITE_CMD244,
	LONG_WRITE_CMD245,
	LONG_WRITE_CMD246,
	LONG_WRITE_CMD247,
	DELAY,
};

enum dcs_tx0_cmd_num {
	TX0_LP_NUM0=0,
    TX0_LP_NUM1=1,
    TX0_LP_NUM2,
	TX0_LP_NUM3,
	TX0_LP_NUM4,
	TX0_LP_NUM5,
	TX0_LP_NUM6,
	TX0_LP_NUM7,
	TX0_LP_NUM8,
	TX0_LP_NUM9,
	TX0_LP_NUM10,
	TX0_LP_NUM11,
};

enum dcs_tx1_cmd_num {
	TX1_LP_NUM0=0,
    TX1_LP_NUM1=1,
    TX1_LP_NUM2,
	TX1_LP_NUM3,
	TX1_LP_NUM4,
	TX1_LP_NUM5,
	TX1_LP_NUM6,
	TX1_LP_NUM7,
	TX1_LP_NUM8,
	TX1_LP_NUM9,
	TX1_LP_NUM10,
	TX1_LP_NUM11,
};

enum mipi_packet_size {
	SHORT_PACKET,
	LONG_PACKET,
	UNKNOWN_PACKET,
};

enum mipi_send_tx{
	TX0_SEND=0xcc,
	TX1_SEND=0xdd,
	TX0_AND_TX1_SEND=0xee,
	TX0_HS_SEND=0x55,
	TX1_HS_SEND=0x66,
	HS_TX0_AND_TX1_SEND,
};

struct mipi_packet {
	u8 data_id;
	u8 word_count_l;
	u8 word_count_h;
	u8 ecc;
};
enum dcs_type{
	DCS_LONG_Write=0x39,
	DCS_SHORT_Write=0x15,
	DCS_SHORT_Read=0x06,
};

struct dcs_setting_entry {
	enum dcs_cmd_name cmd_name;
	//enum dcs_tx0_cmd_num tx0_lpnum;
	//enum dcs_tx1_cmd_num tx1_lpnum;
	enum dcs_type dcs_type;
	u8 count;
	/* for gm8773 fifo up to LP_CMD_FIFO_SIZE byte, buffer maximum to LP_CMD_FIFO_SIZE */
	u8 para_list[LP_CMD_FIFO_SIZE];
	enum mipi_send_tx channel_lp;
};

struct dcs_setting_entry_regist {
	enum dcs_cmd_name cmd_name;
	u8 count;
	/* for gm8773 fifo up to LP_CMD_FIFO_SIZE byte, buffer maximum to LP_CMD_FIFO_SIZE */
	u8 para_list[LP_CMD_FIFO_SIZE];
	enum mipi_send_tx channel_lp;
};

#define PASSWORD_REG  0x00

#endif
